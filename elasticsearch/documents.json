
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R1", "name": "Monitor Your Estimated Charges Using Amazon CloudWatch", "description": "In this scenario, you create an Amazon CloudWatch alarm to monitor your estimated charges. When you enable the monitoring of estimated charges for your AWS account, the estimated charges are calculated and sent several times daily to CloudWatch as metric data.", "version": "1.1", "createdDate": "2017-07-18T20:49:42.196+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:42.196+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon CloudWatch", "tools": [ "AWS Management Console" ], "action": "Getting-started", "tags": [ "Amazon CloudWatch" ], "type": "TUTORIAL", "steps": [ { "id": "R1_1", "name": "Enable Billing Alerts", "type": "RUNBOOK", "status": null, "tasks": [ "To enable monitoring of your estimated charges (Amazon CloudWatch) : \n Open the Billing and Cost Management console at https://console.aws.amazon.com/billing/home?#. \nIn the navigation pane, choose Preferences. \nSelect Receive Billing Alerts. \nChoose Save preferences." ], "commands": [], "runbook_refs": [ "R2" ] }, { "id": "R1_2", "name": "Create a Billing Alarm", "type": "RUNBOOK", "status": null, "tasks": [ "To create a billing alarm (Amazon CloudWatch) : \n Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/. \nIf necessary, change the region to US East (N. Virginia). Billing metric data is stored in this region and reflects worldwide charges. \nIn the navigation pane, choose Alarms, Billing. \nFor Whenever my total AWS charges for the month exceed, specify the monetary amount (for example, 200) that must be exceeded to trigger the alarm and send an email notification. \n Tip: Under Alarm Preview, there is an estimate of your charges that you can use to set an appropriate amount. \nFor send a notification to, choose an existing notification list or create a new one. \n To create a list, choose New list and type a comma-separated list of email addresses to be notified when the alarm changes to the ALARM state. Each email address will be sent a subscription confirmation email. The recipient must confirm the subscription before notifications can be sent to the email address. \nChoose Create Alarm." ], "commands": [], "runbook_refs": [ "R3" ] }, { "id": "R1_3", "name": "Check the Alarm Status", "type": "RUNBOOK", "status": null, "tasks": [ "To check the alarm status : \n Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/. \nIf necessary, change the region to US East (N. Virginia). Billing metric data is stored in this region and reflects worldwide charges. \nIn the navigation pane, choose Alarms, Billing. \nSelect the check box next to the alarm. Note that until the subscription is confirmed, it is shown as \"Pending confirmation\". After the subscription is confirmed, refresh the console to show the updated status." ], "commands": [], "runbook_refs": [ "R4" ] }, { "id": "R1_4", "name": "Edit a Billing Alarm", "type": "RUNBOOK", "status": null, "tasks": [ "To edit a billing alarm (Amazon CloudWatch) : \n Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/. \nIf necessary, change the region to US East (N. Virginia). Billing metric data is stored in this region and reflects worldwide charges. \nIn the navigation pane, choose Alarms, Billing. \nSelect the check box next to the alarm and then choose Actions, Modify. \nFor Whenever my total AWS charges for the month exceed, specify the new amount that must be exceeded to trigger the alarm and send an email notification. \nChoose Save Changes." ], "commands": [], "runbook_refs": [ "R5" ] }, { "id": "R1_5", "name": " Delete a Billing Alarm", "type": "RUNBOOK", "status": null, "tasks": [ "To delete a billing alarm : \n Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/. \nIf necessary, change the region to US East (N. Virginia). Billing metric data is stored in this region and reflects worldwide charges. \nIn the navigation pane, choose Alarms, Billing. \nSelect the check box next to the alarm and then choose Actions, Delete. \nWhen prompted for confirmation, choose Yes, Delete." ], "commands": [], "runbook_refs": [ "R6" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R2", "name": "Enable Billing Alerts", "description": "Before you can create an alarm for your estimated charges, you must enable billing alerts, so that you can monitor your estimated AWS charges and create an alarm using billing metric data. After you enable billing alerts, you cannot disable data collection, but you can delete any billing alarms you created. \n After you enable billing alerts for the first time, it takes about 15 minutes before you can view billing data and set billing alarms.", "version": "1.1", "createdDate": "2017-07-18T20:49:42.422+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:42.422+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon CloudWatch", "tools": [ "AWS Management Console" ], "action": "Enable", "tags": [ "Amazon CloudWatch" ], "type": "TUTORIAL", "steps": [ { "id": "R2_1", "name": "To enable monitoring of your estimated charges (Amazon CloudWatch)", "type": "TASKS", "status": null, "tasks": [ "Open the Billing and Cost Management console at https://console.aws.amazon.com/billing/home?#.", "In the navigation pane, choose Preferences.", "Select Receive Billing Alerts.", "Choose Save preferences." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R3", "name": "Create a Billing Alarm", "description": "After you've enabled billing alerts, you can create a billing alarm. In this scenario, you create an alarm that sends an email message when your estimated charges for AWS exceed a specified threshold.", "version": "1.1", "createdDate": "2017-07-18T20:49:42.651+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:42.651+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon CloudWatch", "tools": [ "AWS Management Console" ], "action": "Create", "tags": [ "Amazon CloudWatch" ], "type": "TUTORIAL", "steps": [ { "id": "R3_1", "name": "To create a billing alarm (Amazon CloudWatch)", "type": "TASKS", "status": null, "tasks": [ "Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.", "If necessary, change the region to US East (N. Virginia). Billing metric data is stored in this region and reflects worldwide charges.", "In the navigation pane, choose Alarms, Billing.", "For Whenever my total AWS charges for the month exceed, specify the monetary amount (for example, 200) that must be exceeded to trigger the alarm and send an email notification. \n Tip: Under Alarm Preview, there is an estimate of your charges that you can use to set an appropriate amount.", "For send a notification to, choose an existing notification list or create a new one. \n To create a list, choose New list and type a comma-separated list of email addresses to be notified when the alarm changes to the ALARM state. Each email address will be sent a subscription confirmation email. The recipient must confirm the subscription before notifications can be sent to the email address.", "Choose Create Alarm." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R4", "name": "Check the Alarm Status", "description": "Now, check the status of the billing alarm that you just created.", "version": "1.1", "createdDate": "2017-07-18T20:49:42.871+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:42.871+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon CloudWatch", "tools": [ "AWS Management Console" ], "action": "Check", "tags": [ "Amazon CloudWatch" ], "type": "TUTORIAL", "steps": [ { "id": "R4_1", "name": "To check the alarm status", "type": "TASKS", "status": null, "tasks": [ "Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.", "If necessary, change the region to US East (N. Virginia). Billing metric data is stored in this region and reflects worldwide charges.", "In the navigation pane, choose Alarms, Billing.", "Select the check box next to the alarm. Note that until the subscription is confirmed, it is shown as \"Pending confirmation\". After the subscription is confirmed, refresh the console to show the updated status." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R5", "name": "Edit a Billing Alarm", "description": "Let's say that you want to increase the amount money you spend with AWS each month from $200 to $400. You can edit your existing billing alarm and increase the monetary amount that must be exceeded before the alarm is triggered.", "version": "1.1", "createdDate": "2017-07-18T20:49:43.102+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:43.102+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon CloudWatch", "tools": [ "AWS Management Console" ], "action": "Edit", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R5_1", "name": "To edit a billing alarm (Amazon CloudWatch)", "type": "TASKS", "status": null, "tasks": [ "Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.", "If necessary, change the region to US East (N. Virginia). Billing metric data is stored in this region and reflects worldwide charges.", "In the navigation pane, choose Alarms, Billing.", "Select the check box next to the alarm and then choose Actions, Modify.", "For Whenever my total AWS charges for the month exceed, specify the new amount that must be exceeded to trigger the alarm and send an email notification.", "Choose Save Changes." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R6", "name": "Delete a Billing Alarm", "description": "You can delete your billing alarm if you no longer need it.", "version": "1.1", "createdDate": "2017-07-18T20:49:43.324+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:43.324+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon CloudWatch", "tools": [ "AWS Management Console" ], "action": "Delete", "tags": [ "Amazon CloudWatch" ], "type": "TUTORIAL", "steps": [ { "id": "R6_1", "name": "To delete a billing alarm", "type": "TASKS", "status": null, "tasks": [ "Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.", "If necessary, change the region to US East (N. Virginia). Billing metric data is stored in this region and reflects worldwide charges.", "In the navigation pane, choose Alarms, Billing.", "Select the check box next to the alarm and then choose Actions, Delete.", "When prompted for confirmation, choose Yes, Delete." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R7", "name": "Publish Metrics to CloudWatch", "description": "In this scenario, you'll use the AWS Command Line Interface (AWS CLI) to publish a single metric for a hypothetical application named GetStarted. If you haven't already installed and configured the AWS CLI, see Getting Set Up with the AWS Command Line Interface in the AWS Command Line Interface User Guide.", "version": "1.1", "createdDate": "2017-07-18T20:49:43.545+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:43.545+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon CloudWatch", "tools": [ "AWS Management Console" ], "action": "Publish", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R7_1", "name": "Define the Data Configuration", "type": "RUNBOOK", "status": null, "tasks": [ "Define the Data Configuration : \n Choose names for your metric and namespace that make sense to you. For this example, name the metric RequestLatency and place all of the data points into the GetStarted namespace \n You'll publish several data points that collectively represent three hours of latency data. The raw data comprises fifteen request latency readings distributed over three hours. Each reading is in milliseconds: \n Hour one: 87, 51, 125, 235 \n Hour two: 121, 113, 189, 65, 89 \n Hour three: 100, 47, 133, 98, 100, 328\n You can publish data to CloudWatch as single data points or as an aggregated set of data points called a statistic set. You can aggregate metrics to a granularity as low as one minute. You can publish the aggregated data points to CloudWatch as a set of statistics with four predefined keys: Sum, Minimum, Maximum, and SampleCount. \n You'll publish the data points from hour one as single data points. For the data from hours two and three, you'll aggregate the data points and publish a statistic set for each hour." ], "commands": [], "runbook_refs": [ "R8" ] }, { "id": "R7_2", "name": "Add Metrics to CloudWatch", "type": "RUNBOOK", "status": null, "tasks": [ "To publish data points to CloudWatch : \n At a command prompt, run the following put-metric-data commands to add data for the first hour. Replace the example time stamp with a time stamp that is two hours in the past, in Universal Coordinated Time (UTC). \n aws cloudwatch put-metric-data --metric-name RequestLatency --namespace GetStarted \\ --timestamp 2016-10-14T20:30:00Z --value 87 --unit Milliseconds \n aws cloudwatch put-metric-data --metric-name RequestLatency --namespace GetStarted \\ --timestamp 2016-10-14T20:30:00Z --value 51 --unit Milliseconds \n aws cloudwatch put-metric-data --metric-name RequestLatency --namespace GetStarted \\ --timestamp 2016-10-14T20:30:00Z --value 125 --unit Milliseconds \n aws cloudwatch put-metric-data --metric-name RequestLatency --namespace GetStarted \\ --timestamp 2016-10-14T20:30:00Z --value 235 --unit Milliseconds \nAdd data for the second hour, using a time stamp that is one hour later than the first hour. \n aws cloudwatch put-metric-data --metric-name RequestLatency --namespace GetStarted \\ --timestamp 2016-10-14T21:30:00Z --statistic-values Sum=577,Minimum=65,Maximum=189,SampleCount=5 --unit Milliseconds \nAdd data for the third hour, omitting the time stamp to default to the current time. \n aws cloudwatch put-metric-data --metric-name RequestLatency --namespace GetStarted \\ --statistic-values Sum=806,Minimum=47,Maximum=328,SampleCount=6 --unit Milliseconds" ], "commands": [], "runbook_refs": [ "R9" ] }, { "id": "R7_3", "name": "Get Statistics from CloudWatch", "type": "RUNBOOK", "status": null, "tasks": [ "Get Statistics from CloudWatch : \n Now that you have published metrics to CloudWatch, you can retrieve statistics based on those metrics using the get-metric-statistics command as follows. Be sure to specify --start-time and --end-time far enough in the past to cover the earliest time stamp that you published. \n aws cloudwatch get-metric-statistics --namespace GetStarted --metric-name RequestLatency --statistics Average \\ --start-time 2016-10-14T00:00:00Z --end-time 2016-10-15T00:00:00Z --period 60" ], "commands": [], "runbook_refs": [ "R10" ] }, { "id": "R7_4", "name": "View Graphs with the Console", "type": "RUNBOOK", "status": null, "tasks": [ "To view graphs of your statistics on the console : \n Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/. \nIn the Navigation pane, choose Metrics. \nIn the All metrics tab, in the search box, type RequestLatency and press Enter. \nSelect the check box for the RequestLatency metric. A graph of the metric data is displayed in the upper pane." ], "commands": [], "runbook_refs": [ "R11" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R8", "name": "Define the Data Configuration", "description": "In this scenario, you'll publish data points that track the request latency for the application. ", "version": "1.1", "createdDate": "2017-07-18T20:49:43.766+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:43.766+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon CloudWatch", "tools": [ "AWS Management Console" ], "action": "Edit", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R8_1", "name": "Define the Data Configuration", "type": "TASKS", "status": null, "tasks": [ "Choose names for your metric and namespace that make sense to you. For this example, name the metric RequestLatency and place all of the data points into the GetStarted namespace \n You'll publish several data points that collectively represent three hours of latency data. The raw data comprises fifteen request latency readings distributed over three hours. Each reading is in milliseconds: \n Hour one: 87, 51, 125, 235 \n Hour two: 121, 113, 189, 65, 89 \n Hour three: 100, 47, 133, 98, 100, 328\n You can publish data to CloudWatch as single data points or as an aggregated set of data points called a statistic set. You can aggregate metrics to a granularity as low as one minute. You can publish the aggregated data points to CloudWatch as a set of statistics with four predefined keys: Sum, Minimum, Maximum, and SampleCount. \n You'll publish the data points from hour one as single data points. For the data from hours two and three, you'll aggregate the data points and publish a statistic set for each hour." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R9", "name": "Add Metrics to CloudWatch", "description": "After you have defined your data configuration, you are ready to add data.", "version": "1.1", "createdDate": "2017-07-18T20:49:43.993+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:43.993+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon CloudWatch", "tools": [ "AWS Management Console" ], "action": "Add", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R9_1", "name": "To publish data points to CloudWatch", "type": "TASKS", "status": null, "tasks": [ "At a command prompt, run the following put-metric-data commands to add data for the first hour. Replace the example time stamp with a time stamp that is two hours in the past, in Universal Coordinated Time (UTC). \n aws cloudwatch put-metric-data --metric-name RequestLatency --namespace GetStarted \\ --timestamp 2016-10-14T20:30:00Z --value 87 --unit Milliseconds \n aws cloudwatch put-metric-data --metric-name RequestLatency --namespace GetStarted \\ --timestamp 2016-10-14T20:30:00Z --value 51 --unit Milliseconds \n aws cloudwatch put-metric-data --metric-name RequestLatency --namespace GetStarted \\ --timestamp 2016-10-14T20:30:00Z --value 125 --unit Milliseconds \n aws cloudwatch put-metric-data --metric-name RequestLatency --namespace GetStarted \\ --timestamp 2016-10-14T20:30:00Z --value 235 --unit Milliseconds", "Add data for the second hour, using a time stamp that is one hour later than the first hour. \n aws cloudwatch put-metric-data --metric-name RequestLatency --namespace GetStarted \\ --timestamp 2016-10-14T21:30:00Z --statistic-values Sum=577,Minimum=65,Maximum=189,SampleCount=5 --unit Milliseconds", "Add data for the third hour, omitting the time stamp to default to the current time. \n aws cloudwatch put-metric-data --metric-name RequestLatency --namespace GetStarted \\ --statistic-values Sum=806,Minimum=47,Maximum=328,SampleCount=6 --unit Milliseconds" ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R10", "name": "Get Statistics from CloudWatch", "description": "Get Statistics from CloudWatch", "version": "1.1", "createdDate": "2017-07-18T20:49:44.210+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:44.210+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon CloudWatch", "tools": [ "AWS Management Console" ], "action": "Get", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R10_1", "name": "Get Statistics from CloudWatch", "type": "TASKS", "status": null, "tasks": [ "Now that you have published metrics to CloudWatch, you can retrieve statistics based on those metrics using the get-metric-statistics command as follows. Be sure to specify --start-time and --end-time far enough in the past to cover the earliest time stamp that you published. \n aws cloudwatch get-metric-statistics --namespace GetStarted --metric-name RequestLatency --statistics Average \\ --start-time 2016-10-14T00:00:00Z --end-time 2016-10-15T00:00:00Z --period 60" ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R11", "name": " View Graphs with the Console", "description": "After you have published metrics to CloudWatch, you can use the CloudWatch console to view statistical graphs.", "version": "1.1", "createdDate": "2017-07-18T20:49:44.439+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:44.439+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon CloudWatch", "tools": [ "AWS Management Console" ], "action": "View", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R11_1", "name": "To view graphs of your statistics on the console", "type": "TASKS", "status": null, "tasks": [ "Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.", "In the Navigation pane, choose Metrics.", "In the All metrics tab, in the search box, type RequestLatency and press Enter.", "Select the check box for the RequestLatency metric. A graph of the metric data is displayed in the upper pane." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R12", "name": "Getting Started with Amazon EC2 Linux Instances", "description": "Let's get started with Amazon Elastic Compute Cloud (Amazon EC2) by launching, connecting to, and using a Linux instance. An instance is a virtual server in the AWS cloud. With Amazon EC2, you can set up and configure the operating system and applications that run on your instance.\n When you sign up for AWS, you can get started with Amazon EC2 for free using the AWS Free Tier. If you created your AWS account less than 12 months ago, and have not already exceeded the free tier benefits for Amazon EC2, it will not cost you anything to complete this tutorial, because we help you select options that are within the free tier benefits. Otherwise, you'll incur the standard Amazon EC2 usage fees from the time that you launch the instance until you terminate the instance (which is the final task of this tutorial), even if it remains idle.", "version": "1.1", "createdDate": "2017-07-18T20:49:44.666+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:44.666+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "EC2 Linux Instances", "tools": [ "EC2 console" ], "action": "Getting Started", "tags": [ "Amazon EC2 Linux Instances" ], "type": "TUTORIAL", "steps": [ { "id": "R12_1", "name": "Launch an Instance", "type": "RUNBOOK", "status": null, "tasks": [ "To launch an instance (Amazon EC2 Linux Instances) : \n Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/. \nFrom the console dashboard, choose Launch Instance. \nThe Choose an Amazon Machine Image (AMI) page displays a list of basic configurations, called Amazon Machine Images (AMIs), that serve as templates for your instance. Select the HVM edition of the Amazon Linux AMI. Notice that this AMI is marked \"Free tier eligible.\" \nOn the Choose an Instance Type page, you can select the hardware configuration of your instance. Select the t2.micro type, which is selected by default. Notice that this instance type is eligible for the free tier. \n NOTE: T2 instances, such as t2.micro, must be launched into a VPC. If your AWS account supports EC2-Classic and you do not have a VPC in the selected region, the launch wizard creates a VPC for you and you can continue to the next step. Otherwise, the Review and Launch button is disabled and you must choose Next: Configure Instance Details and follow the directions to select a subnet. \nChoose Review and Launch to let the wizard complete the other configuration settings for you. \nOn the Review Instance Launch page, under Security Groups, you'll see that the wizard created and selected a security group for you. You can use this security group, or alternatively you can select the security group that you created when getting set up using the following steps: \n \t Choose Edit security groups. \n \t On the Configure Security Group page, ensure that Select an existing security group is selected. \n \t Select your security group from the list of existing security groups, and then choose Review and Launch. \nOn the Review Instance Launch page, choose Launch. \nWhen prompted for a key pair, select Choose an existing key pair, then select the key pair that you created when getting set up. \n Alternatively, you can create a new key pair. Select Create a new key pair, enter a name for the key pair, and then choose Download Key Pair. This is the only chance for you to save the private key file, so be sure to download it. Save the private key file in a safe place. You'll need to provide the name of your key pair when you launch an instance and the corresponding private key each time you connect to the instance. \n WARNING: Don't select the Proceed without a key pair option. If you launch your instance without a key pair, then you can't connect to it. \n When you are ready, select the acknowledgement check box, and then choose Launch Instances. \nA confirmation page lets you know that your instance is launching. Choose View Instances to close the confirmation page and return to the console. \nOn the Instances screen, you can view the status of the launch. It takes a short time for an instance to launch. When you launch an instance, its initial state is pending. After the instance starts, its state changes to running and it receives a public DNS name. (If the Public DNS (IPv4) column is hidden, choose the Show/Hide icon in the top right corner of the page and then select Public DNS (IPv4).) \nIt can take a few minutes for the instance to be ready so that you can connect to it. Check that your instance has passed its status checks; you can view this information in the Status Checks column." ], "commands": [], "runbook_refs": [ "R13" ] }, { "id": "R12_2", "name": "Connect to Your Instance", "type": "RUNBOOK", "status": null, "tasks": [ "To connect to your Linux instance using a web browser (Amazon EC2 Linux Instances) : \n You must have Java installed and enabled in the browser. If you don't have Java already, you can contact your system administrator to get it installed, or follow the steps outlined in the following pages: Install Java and Enable Java in your web browser. \nFrom the Amazon EC2 console, choose Instances in the navigation pane. \nSelect the instance, and then choose Connect. \nChoose A Java SSH client directly from my browser (Java required). \nAmazon EC2 automatically detects the public DNS name of your instance and populates Public DNS for you. It also detects the key pair that you specified when you launched the instance. Complete the following, and then choose Launch SSH Client. \n \t In User name, enter ec2-user. \n \t In Private key path, enter the fully qualified path to your private key (.pem) file, including the key pair name. \n \t (Optional) Choose Store in browser cache to store the location of the private key in your browser cache. This enables Amazon EC2 to detect the location of the private key in subsequent browser sessions, until you clear your browser's cache. \nIf necessary, choose Yes to trust the certificate, and choose Run to run the MindTerm client. \nIf this is your first time running MindTerm, a series of dialog boxes asks you to accept the license agreement, confirm setup for your home directory, and confirm setup of the known hosts directory. Confirm these settings. \nA dialog prompts you to add the host to your set of known hosts. If you do not want to store the host key information on your local computer, choose No. \nA window opens and you are connected to your instance. \n NOTE: If you chose No in the previous step, you'll see the following message, which is expected: \n \t Verification of server key disabled in this session." ], "commands": [], "runbook_refs": [ "R14" ] }, { "id": "R12_3", "name": "Clean Up Your Instance", "type": "RUNBOOK", "status": null, "tasks": [ "To terminate your instance (Amazon EC2 Linux Instances) : \n In the navigation pane, choose Instances. In the list of instances, select the instance. \nChoose Actions, then Instance State, and then choose Terminate. \nChoose Yes, Terminate when prompted for confirmation. \n Amazon EC2 shuts down and terminates your instance. After your instance is terminated, it remains visible on the console for a short while, and then the entry is deleted." ], "commands": [], "runbook_refs": [ "R15" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R13", "name": "Launch an Instance", "description": "You can launch a Linux instance using the AWS Management Console as described in the following procedure. This tutorial is intended to help you launch your first instance quickly, so it doesn't cover all possible options. For more information about the advanced options, see Launching an Instance.", "version": "1.1", "createdDate": "2017-07-18T20:49:44.904+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:44.904+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "EC2 Linux Instances", "tools": [ "EC2 console" ], "action": "Launch", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R13_1", "name": "To launch an instance (Amazon EC2 Linux Instances)", "type": "TASKS", "status": null, "tasks": [ "Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.", "From the console dashboard, choose Launch Instance.", "The Choose an Amazon Machine Image (AMI) page displays a list of basic configurations, called Amazon Machine Images (AMIs), that serve as templates for your instance. Select the HVM edition of the Amazon Linux AMI. Notice that this AMI is marked \"Free tier eligible.\"", "On the Choose an Instance Type page, you can select the hardware configuration of your instance. Select the t2.micro type, which is selected by default. Notice that this instance type is eligible for the free tier. \n NOTE: T2 instances, such as t2.micro, must be launched into a VPC. If your AWS account supports EC2-Classic and you do not have a VPC in the selected region, the launch wizard creates a VPC for you and you can continue to the next step. Otherwise, the Review and Launch button is disabled and you must choose Next: Configure Instance Details and follow the directions to select a subnet.", "Choose Review and Launch to let the wizard complete the other configuration settings for you.", "On the Review Instance Launch page, under Security Groups, you'll see that the wizard created and selected a security group for you. You can use this security group, or alternatively you can select the security group that you created when getting set up using the following steps: \n \t Choose Edit security groups. \n \t On the Configure Security Group page, ensure that Select an existing security group is selected. \n \t Select your security group from the list of existing security groups, and then choose Review and Launch.", "On the Review Instance Launch page, choose Launch.", "When prompted for a key pair, select Choose an existing key pair, then select the key pair that you created when getting set up. \n Alternatively, you can create a new key pair. Select Create a new key pair, enter a name for the key pair, and then choose Download Key Pair. This is the only chance for you to save the private key file, so be sure to download it. Save the private key file in a safe place. You'll need to provide the name of your key pair when you launch an instance and the corresponding private key each time you connect to the instance. \n WARNING: Don't select the Proceed without a key pair option. If you launch your instance without a key pair, then you can't connect to it. \n When you are ready, select the acknowledgement check box, and then choose Launch Instances.", "A confirmation page lets you know that your instance is launching. Choose View Instances to close the confirmation page and return to the console.", "On the Instances screen, you can view the status of the launch. It takes a short time for an instance to launch. When you launch an instance, its initial state is pending. After the instance starts, its state changes to running and it receives a public DNS name. (If the Public DNS (IPv4) column is hidden, choose the Show/Hide icon in the top right corner of the page and then select Public DNS (IPv4).)", "It can take a few minutes for the instance to be ready so that you can connect to it. Check that your instance has passed its status checks; you can view this information in the Status Checks column." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R14", "name": "Connect to Your Instance", "description": "There are several ways to connect to a Linux instance. In this procedure, you'll connect using your browser. Alternatively, you can connect using PuTTY or an SSH client. It's also assumed that you followed the steps earlier and launched an instance from an Amazon Linux AMI, which has a specific user name. Other Linux distributions may use a different user name. For more information, see Connecting to Your Linux Instance from Windows Using PuTTY or Connecting to Your Linux Instance Using SSH. \n IMPORTANT: You can't connect to your instance unless you launched it with a key pair for which you have the .pem file and you launched it with a security group that allows SSH access. If you can't connect to your instance, see Troubleshooting Connecting to Your Instance for assistance.", "version": "1.1", "createdDate": "2017-07-18T20:49:45.135+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:45.136+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "EC2 Linux Instances", "tools": [ "EC2 console" ], "action": "Connect", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R14_1", "name": "To connect to your Linux instance using a web browser (Amazon EC2 Linux Instances)", "type": "TASKS", "status": null, "tasks": [ "You must have Java installed and enabled in the browser. If you don't have Java already, you can contact your system administrator to get it installed, or follow the steps outlined in the following pages: Install Java and Enable Java in your web browser.", "From the Amazon EC2 console, choose Instances in the navigation pane.", "Select the instance, and then choose Connect.", "Choose A Java SSH client directly from my browser (Java required).", "Amazon EC2 automatically detects the public DNS name of your instance and populates Public DNS for you. It also detects the key pair that you specified when you launched the instance. Complete the following, and then choose Launch SSH Client. \n \t In User name, enter ec2-user. \n \t In Private key path, enter the fully qualified path to your private key (.pem) file, including the key pair name. \n \t (Optional) Choose Store in browser cache to store the location of the private key in your browser cache. This enables Amazon EC2 to detect the location of the private key in subsequent browser sessions, until you clear your browser's cache.", "If necessary, choose Yes to trust the certificate, and choose Run to run the MindTerm client.", "If this is your first time running MindTerm, a series of dialog boxes asks you to accept the license agreement, confirm setup for your home directory, and confirm setup of the known hosts directory. Confirm these settings.", "A dialog prompts you to add the host to your set of known hosts. If you do not want to store the host key information on your local computer, choose No.", "A window opens and you are connected to your instance. \n NOTE: If you chose No in the previous step, you'll see the following message, which is expected: \n \t Verification of server key disabled in this session." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R15", "name": "Clean Up Your Instance", "description": "After you've finished with the instance that you created for this tutorial, you should clean up by terminating the instance. \n IMPORTANT: Terminating an instance effectively deletes it; you can't reconnect to an instance after you've terminated it.", "version": "1.1", "createdDate": "2017-07-18T20:49:45.362+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:45.362+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "EC2 Linux Instances", "tools": [ "EC2 console" ], "action": "Clean Up", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R15_1", "name": "To terminate your instance (Amazon EC2 Linux Instances)", "type": "TASKS", "status": null, "tasks": [ "In the navigation pane, choose Instances. In the list of instances, select the instance.", "Choose Actions, then Instance State, and then choose Terminate.", "Choose Yes, Terminate when prompted for confirmation. \n Amazon EC2 shuts down and terminates your instance. After your instance is terminated, it remains visible on the console for a short while, and then the entry is deleted." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R16", "name": "Getting Started with Amazon EC2 Windows Instances", "description": "Let's get started with Amazon Elastic Compute Cloud (Amazon EC2) by launching, connecting to, and using a Windows instance. An instance is a virtual server in the AWS cloud. With Amazon EC2, you can set up and configure the operating system and applications that run on your instance.\n When you sign up for AWS, you can get started with Amazon EC2 for free using the AWS Free Tier. If you created your AWS account less than 12 months ago, and have not already exceeded the free tier benefits for Amazon EC2, it will not cost you anything to complete this tutorial, because we help you select options that are within the free tier benefits. Otherwise, you'll incur the standard Amazon EC2 usage fees from the time that you launch the instance until you terminate the instance (which is the final task of this tutorial), even if it remains idle.", "version": "1.1", "createdDate": "2017-07-18T20:49:45.600+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:45.600+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "EC2 Windows Instances", "tools": [ "EC2 console" ], "action": "Getting Started", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R16_1", "name": "Launch an Instance (Amazon EC2 Windows Instances)", "type": "RUNBOOK", "status": null, "tasks": [ "To launch an instance (Amazon EC2 Windows Instances) : \n Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/. \nFrom the console dashboard, choose Launch Instance. \nThe Choose an Amazon Machine Image (AMI) page displays a list of basic configurations, called Amazon Machine Images (AMIs), that serve as templates for your instance. Select the AMI for Windows Server 2012 R2 Base or Windows Server 2008 R2 Base. Notice that these AMIs are marked \"Free tier eligible.\" \nOn the Choose an Instance Type page, you can select the hardware configuration of your instance. Select the t2.micro type, which is selected by default. Notice that this instance type is eligible for the free tier. \n NOTE: T2 instances, such as t2.micro, must be launched into a VPC. If your AWS account supports EC2-Classic and you do not have a VPC in the selected region, the launch wizard creates a VPC for you and you can continue to the next step. Otherwise, the Review and Launch button is disabled and you must choose Next: Configure Instance Details and follow the directions to select a subnet. \nChoose Review and Launch to let the wizard complete the other configuration settings for you. \nOn the Review Instance Launch page, under Security Groups, you'll see that the wizard created and selected a security group for you. You can use this security group, or alternatively you can select the security group that you created when getting set up using the following steps: \n \t Choose Edit security groups. \n \t On the Configure Security Group page, ensure that Select an existing security group is selected. \n \t Select your security group from the list of existing security groups, and then choose Review and Launch. \nOn the Review Instance Launch page, choose Launch. \nWhen prompted for a key pair, select Choose an existing key pair, then select the key pair that you created when getting set up. \n Alternatively, you can create a new key pair. Select Create a new key pair, enter a name for the key pair, and then choose Download Key Pair. This is the only chance for you to save the private key file, so be sure to download it. Save the private key file in a safe place. You'll need to provide the name of your key pair when you launch an instance and the corresponding private key each time you connect to the instance. \n WARNING: Don't select the Proceed without a key pair option. If you launch your instance without a key pair, then you can't connect to it. \n When you are ready, select the acknowledgement check box, and then choose Launch Instances. \nA confirmation page lets you know that your instance is launching. Choose View Instances to close the confirmation page and return to the console. \nOn the Instances screen, you can view the status of the launch. It takes a short time for an instance to launch. When you launch an instance, its initial state is pending. After the instance starts, its state changes to running and it receives a public DNS name. (If the Public DNS (IPv4) column is hidden, choose the Show/Hide icon in the top right corner of the page and then select Public DNS (IPv4).) \nIt can take a few minutes for the instance to be ready so that you can connect to it. Check that your instance has passed its status checks; you can view this information in the Status Checks column." ], "commands": [], "runbook_refs": [ "R17" ] }, { "id": "R16_2", "name": "Connect to Your Instance (Amazon EC2 Windows Instances)", "type": "RUNBOOK", "status": null, "tasks": [ "To connect to your Windows instance using an RDP client (Amazon EC2 Windows Instances) : \n In the Amazon EC2 console, select the instance, and then choose Connect. \nIn the Connect To Your Instance dialog box, choose Get Password (it will take a few minutes after the instance is launched before the password is available). \nChoose Browse and navigate to the private key file you created when you launched the instance. Select the file and choose Open to copy the entire contents of the file into the Contents field. \nChoose Decrypt Password. The console displays the default administrator password for the instance in the Connect To Your Instance dialog box, replacing the link to Get Password shown previously with the actual password. \nRecord the default administrator password, or copy it to the clipboard. You need this password to connect to the instance. \nChoose Download Remote Desktop File. Your browser prompts you to either open or save the .rdp file. Either option is fine. When you have finished, you can choose Close to dismiss the Connect To Your Instance dialog box. \n \t If you opened the .rdp file, you'll see the Remote Desktop Connection dialog box. \n \t If you saved the .rdp file, navigate to your downloads directory, and open the .rdp file to display the dialog box. \nYou may get a warning that the publisher of the remote connection is unknown. You can continue to connect to your instance. \nWhen prompted, log in to the instance, using the administrator account for the operating system and the password that you recorded or copied previously. If your Remote Desktop Connection already has an administrator account set up, you might have to choose the Use another account option and type the user name and password manually. \n NOTE: Sometimes copying and pasting content can corrupt data. If you encounter a \"Password Failed\" error when you log in, try typing in the password manually.  \nDue to the nature of self-signed certificates, you may get a warning that the security certificate could not be authenticated. Use the following steps to verify the identity of the remote computer, or simply choose Yes or Continue to continue if you trust the certificate. \n \t If you are using Remote Desktop Connection from a Windows PC, choose View certificate. If you are using Microsoft Remote Desktop on a Mac, choose Show Certificate. \n \t Choose the Details tab, and scroll down to the Thumbprint entry on a Windows PC, or the SHA1 Fingerprints entry on a Mac. This is the unique identifier for the remote computer's security certificate. \n \t In the Amazon EC2 console, select the instance, choose Actions, and then choose Get System Log. \n \t In the system log output, look for an entry labeled RDPCERTIFICATE-THUMBPRINT. If this value matches the thumbprint or fingerprint of the certificate, you have verified the identity of the remote computer. \n \t If you are using Remote Desktop Connection from a Windows PC, return to the Certificate dialog box and choose OK. If you are using Microsoft Remote Desktop on a Mac, return to the Verify Certificate and choose Continue. \n \t [Windows] Choose Yes in the Remote Desktop Connection window to connect to your instance. \n \t [Mac OS] Log in as prompted, using the default administrator account and the default administrator password that you recorded or copied previously. Note that you might need to switch spaces to see the login screen. For more information about spaces, see http://support.apple.com/kb/PH14155. \n \t If you receive an error while attempting to connect to your instance, see Remote Desktop can't connect to the remote computer." ], "commands": [], "runbook_refs": [ "R18" ] }, { "id": "R16_3", "name": "Clean Up Your Instance (Amazon EC2 Windows Instances)", "type": "RUNBOOK", "status": null, "tasks": [ "To terminate your instance (Amazon EC2 Windows Instances) : \n In the navigation pane, choose Instances. In the list of instances, select the instance. \nChoose Actions, then Instance State, and then choose Terminate. \nChoose Yes, Terminate when prompted for confirmation. \n Amazon EC2 shuts down and terminates your instance. After your instance is terminated, it remains visible on the console for a short while, and then the entry is deleted." ], "commands": [], "runbook_refs": [ "R19" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R17", "name": "Launch an Instance", "description": "You can launch a Windows instance using the AWS Management Console as described in the following procedure. This tutorial is intended to help you launch your first instance quickly, so it doesn't cover all possible options. For more information about the advanced options, see Launching an Instance.", "version": "1.1", "createdDate": "2017-07-18T20:49:45.831+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:45.831+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "EC2 Windows Instances", "tools": [ "EC2 console" ], "action": "Launch", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R17_1", "name": "To launch an instance (Amazon EC2 Windows Instances)", "type": "TASKS", "status": null, "tasks": [ "Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.", "From the console dashboard, choose Launch Instance.", "The Choose an Amazon Machine Image (AMI) page displays a list of basic configurations, called Amazon Machine Images (AMIs), that serve as templates for your instance. Select the AMI for Windows Server 2012 R2 Base or Windows Server 2008 R2 Base. Notice that these AMIs are marked \"Free tier eligible.\"", "On the Choose an Instance Type page, you can select the hardware configuration of your instance. Select the t2.micro type, which is selected by default. Notice that this instance type is eligible for the free tier. \n NOTE: T2 instances, such as t2.micro, must be launched into a VPC. If your AWS account supports EC2-Classic and you do not have a VPC in the selected region, the launch wizard creates a VPC for you and you can continue to the next step. Otherwise, the Review and Launch button is disabled and you must choose Next: Configure Instance Details and follow the directions to select a subnet.", "Choose Review and Launch to let the wizard complete the other configuration settings for you.", "On the Review Instance Launch page, under Security Groups, you'll see that the wizard created and selected a security group for you. You can use this security group, or alternatively you can select the security group that you created when getting set up using the following steps: \n \t Choose Edit security groups. \n \t On the Configure Security Group page, ensure that Select an existing security group is selected. \n \t Select your security group from the list of existing security groups, and then choose Review and Launch.", "On the Review Instance Launch page, choose Launch.", "When prompted for a key pair, select Choose an existing key pair, then select the key pair that you created when getting set up. \n Alternatively, you can create a new key pair. Select Create a new key pair, enter a name for the key pair, and then choose Download Key Pair. This is the only chance for you to save the private key file, so be sure to download it. Save the private key file in a safe place. You'll need to provide the name of your key pair when you launch an instance and the corresponding private key each time you connect to the instance. \n WARNING: Don't select the Proceed without a key pair option. If you launch your instance without a key pair, then you can't connect to it. \n When you are ready, select the acknowledgement check box, and then choose Launch Instances.", "A confirmation page lets you know that your instance is launching. Choose View Instances to close the confirmation page and return to the console.", "On the Instances screen, you can view the status of the launch. It takes a short time for an instance to launch. When you launch an instance, its initial state is pending. After the instance starts, its state changes to running and it receives a public DNS name. (If the Public DNS (IPv4) column is hidden, choose the Show/Hide icon in the top right corner of the page and then select Public DNS (IPv4).)", "It can take a few minutes for the instance to be ready so that you can connect to it. Check that your instance has passed its status checks; you can view this information in the Status Checks column." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R18", "name": "Connect to Your Instance", "description": "To connect to a Windows instance, you must retrieve the initial administrator password and then specify this password when you connect to your instance using Remote Desktop. \n The name of the administrator account depends on the language of the operating system. For example, for English, it's Administrator, for French it's Administrateur, and for Portuguese it's Administrador. For more information, see Localized Names for Administrator Account in Windows in the Microsoft TechNet Wiki.", "version": "1.1", "createdDate": "2017-07-18T20:49:46.061+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:46.061+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "EC2 Windows Instances", "tools": [ "EC2 console" ], "action": "Connect", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R18_1", "name": "To connect to your Windows instance using an RDP client (Amazon EC2 Windows Instances)", "type": "TASKS", "status": null, "tasks": [ "In the Amazon EC2 console, select the instance, and then choose Connect.", "In the Connect To Your Instance dialog box, choose Get Password (it will take a few minutes after the instance is launched before the password is available).", "Choose Browse and navigate to the private key file you created when you launched the instance. Select the file and choose Open to copy the entire contents of the file into the Contents field.", "Choose Decrypt Password. The console displays the default administrator password for the instance in the Connect To Your Instance dialog box, replacing the link to Get Password shown previously with the actual password.", "Record the default administrator password, or copy it to the clipboard. You need this password to connect to the instance.", "Choose Download Remote Desktop File. Your browser prompts you to either open or save the .rdp file. Either option is fine. When you have finished, you can choose Close to dismiss the Connect To Your Instance dialog box. \n \t If you opened the .rdp file, you'll see the Remote Desktop Connection dialog box. \n \t If you saved the .rdp file, navigate to your downloads directory, and open the .rdp file to display the dialog box.", "You may get a warning that the publisher of the remote connection is unknown. You can continue to connect to your instance.", "When prompted, log in to the instance, using the administrator account for the operating system and the password that you recorded or copied previously. If your Remote Desktop Connection already has an administrator account set up, you might have to choose the Use another account option and type the user name and password manually. \n NOTE: Sometimes copying and pasting content can corrupt data. If you encounter a \"Password Failed\" error when you log in, try typing in the password manually. ", "Due to the nature of self-signed certificates, you may get a warning that the security certificate could not be authenticated. Use the following steps to verify the identity of the remote computer, or simply choose Yes or Continue to continue if you trust the certificate. \n \t If you are using Remote Desktop Connection from a Windows PC, choose View certificate. If you are using Microsoft Remote Desktop on a Mac, choose Show Certificate. \n \t Choose the Details tab, and scroll down to the Thumbprint entry on a Windows PC, or the SHA1 Fingerprints entry on a Mac. This is the unique identifier for the remote computer's security certificate. \n \t In the Amazon EC2 console, select the instance, choose Actions, and then choose Get System Log. \n \t In the system log output, look for an entry labeled RDPCERTIFICATE-THUMBPRINT. If this value matches the thumbprint or fingerprint of the certificate, you have verified the identity of the remote computer. \n \t If you are using Remote Desktop Connection from a Windows PC, return to the Certificate dialog box and choose OK. If you are using Microsoft Remote Desktop on a Mac, return to the Verify Certificate and choose Continue. \n \t [Windows] Choose Yes in the Remote Desktop Connection window to connect to your instance. \n \t [Mac OS] Log in as prompted, using the default administrator account and the default administrator password that you recorded or copied previously. Note that you might need to switch spaces to see the login screen. For more information about spaces, see http://support.apple.com/kb/PH14155. \n \t If you receive an error while attempting to connect to your instance, see Remote Desktop can't connect to the remote computer." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R19", "name": "Clean Up Your Instance", "description": "After you've finished with the instance that you created for this tutorial, you should clean up by terminating the instance. \n IMPORTANT: Terminating an instance effectively deletes it; you can't reconnect to an instance after you've terminated it.", "version": "1.1", "createdDate": "2017-07-18T20:49:46.299+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:46.299+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "EC2 Windows Instances", "tools": [ "EC2 console" ], "action": "Clean Up", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R19_1", "name": "To terminate your instance (Amazon EC2 Windows Instances)", "type": "TASKS", "status": null, "tasks": [ "In the navigation pane, choose Instances. In the list of instances, select the instance.", "Choose Actions, then Instance State, and then choose Terminate.", "Choose Yes, Terminate when prompted for confirmation. \n Amazon EC2 shuts down and terminates your instance. After your instance is terminated, it remains visible on the console for a short while, and then the entry is deleted." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R20", "name": "AWS Identity and Access Management", "description": "This topic shows you how to give access to your AWS resources by creating AWS Identity and Access Management (IAM) users under your AWS account. First, you'll learn about IAM concepts you should understand before you create groups and users, and then you'll walk through how to perform the necessary tasks using the AWS Management Console. The first task is to set up an administrators group for your AWS account. Having an administrators group for your AWS account isn't required, but we strongly recommend it. \n This set of documentation deals primarily with the IAM service. To learn about getting started with AWS and using multiple services to solve a problem such as building and launching your first project, see the Getting Started Resource Center. \n The following figure shows a simple example of an AWS account with three groups. A group is a collection of users who have similar responsibilities. In this example, one group is for administrators (it's called Admins). There's also a Developers group and a Test group. Each group has multiple users. Each user can be in more than one group, although the figure doesn't illustrate that. You can't put groups inside other groups. You use policies to grant permissions to groups. In the procedure that follows, you will perform the following tasks: \n Create an Administrators group and give the group permission to access all of your AWS account's resources. \n Create a user for yourself and add that user to the Administrators group. \n Create a password for your user so you can sign in to the AWS Management Console. \n You will grant the Administrators group permission to access all your available AWS account resources. Available resources are any AWS products you use, or that you are signed up for. Users in the Administrators group can also access your AWS account information, except for your AWS account's security credentials.", "version": "1.1", "createdDate": "2017-07-18T20:49:46.531+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:46.532+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "AWS IAM", "tools": [ "AWS Management Console" ], "action": "Getting Started", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R20_1", "name": "Creating Your First IAM Admin User and Group", "type": "RUNBOOK", "status": null, "tasks": [ "Creating Your First IAM Admin User and Group : \n In the navigation pane, choose Users and then choose Add user. \nFor User name, type a user name, such as Administrator. The name can consist of letters, digits, and the following characters: plus (+), equal (=), comma (,), period (.), at (@), underscore (_), and hyphen (-). The name is not case sensitive and can be a maximum of 64 characters in length. \nSelect the check box next to AWS Management Console access, select Custom password, and then type your new password in the text box. If you're creating the user for someone other than yourself, you can optionally select Require password reset to force the user to create a new password when first signing in. \nChoose Next: Permissions. \nOn the Set permissions for user page, choose Add user to group. \nChoose Create group. \nIn the Create group dialog box, type the name for the new group. The name can consist of letters, digits, and the following characters: plus (+), equal (=), comma (,), period (.), at (@), underscore (_), and hyphen (-). The name is not case sensitive and can be a maximum of 128 characters in length. \nIn the policy list, select the check box next to AdministratorAccess. Then choose Create group. \nBack in the list of groups, select the check box for your new group. Choose Refresh if necessary to see the group in the list. \nChoose Next: Review to see the list of group memberships to be added to the new user. When you are ready to proceed, choose Create user." ], "commands": [], "runbook_refs": [ "R21" ] }, { "id": "R20_2", "name": "Creating an IAM User and Group (AWS CLI)", "type": "RUNBOOK", "status": null, "tasks": [ "How Users Sign In to Your Account : \n If your users sign-in directly to a console, they are redirected to either a global or a regional sign-in endpoint, based on whether the selected service console supports regions. For example, the main console home page supports regions, so if you sign in to the following URL:Copy https://alias.signin.aws.amazon.com/console you are redirected to a regional sign-in endpoint such as https://us-east-1.signin.aws.amazon.com, resulting in a regional CloudTrail log entry in the user's region's log: On the other hand, the Amazon S3 console does not support regions, so if you sign in to the following URL https://alias.signin.aws.amazon.com/console/s3 AWS redirects you to the global sign-in endpoint at https://signin.aws.amazon.com, resulting in a global CloudTrail log entry. \nYou can manually request a certain regional sign-in endpoint by signing in to the region-enabled main console home page using a URL syntax like the following: Copy https://alias.signin.aws.amazon.com/console?ap-southeast-1. AWS redirects you to the ap-southeast-1 regional sign-in endpoint and results in a regional CloudTrail log event." ], "commands": [], "runbook_refs": [ "R22" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R21", "name": "Creating Your First IAM Admin User and Group", "description": "Now that you're signed up for Amazon SNS, you're ready to create a topic. A topic is a communication channel to send messages and subscribe to notifications. It provides an access point for publishers and subscribers to communicate with each other. In this section you create a topic named MyTopic.", "version": "1.1", "createdDate": "2017-07-18T20:49:46.759+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:46.759+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon SQS", "tools": [ "AWS Management Console" ], "action": "Create", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R21_1", "name": "Creating Your First IAM Admin User and Group", "type": "TASKS", "status": null, "tasks": [ "In the navigation pane, choose Users and then choose Add user.", "For User name, type a user name, such as Administrator. The name can consist of letters, digits, and the following characters: plus (+), equal (=), comma (,), period (.), at (@), underscore (_), and hyphen (-). The name is not case sensitive and can be a maximum of 64 characters in length.", "Select the check box next to AWS Management Console access, select Custom password, and then type your new password in the text box. If you're creating the user for someone other than yourself, you can optionally select Require password reset to force the user to create a new password when first signing in.", "Choose Next: Permissions.", "On the Set permissions for user page, choose Add user to group.", "Choose Create group.", "In the Create group dialog box, type the name for the new group. The name can consist of letters, digits, and the following characters: plus (+), equal (=), comma (,), period (.), at (@), underscore (_), and hyphen (-). The name is not case sensitive and can be a maximum of 128 characters in length.", "In the policy list, select the check box next to AdministratorAccess. Then choose Create group.", "Back in the list of groups, select the check box for your new group. Choose Refresh if necessary to see the group in the list.", "Choose Next: Review to see the list of group memberships to be added to the new user. When you are ready to proceed, choose Create user." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R22", "name": "How Users Sign In to Your Account", "description": "After you create IAM users and passwords for each, users can sign in to the AWS Management Console for your AWS account with a special URL.By default, the sign-in URL for your account includes your account ID. You can create a unique sign-in URL for your account so that the URL includes a name instead of an account ID. For more information, see Your AWS Account ID and Its Alias.", "version": "1.1", "createdDate": "2017-07-18T20:49:46.988+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:46.988+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon SQS", "tools": [ "AWS Management Console" ], "action": "Sign In", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R22_1", "name": "How Users Sign In to Your Account", "type": "TASKS", "status": null, "tasks": [ "If your users sign-in directly to a console, they are redirected to either a global or a regional sign-in endpoint, based on whether the selected service console supports regions. For example, the main console home page supports regions, so if you sign in to the following URL:Copy https://alias.signin.aws.amazon.com/console you are redirected to a regional sign-in endpoint such as https://us-east-1.signin.aws.amazon.com, resulting in a regional CloudTrail log entry in the user's region's log: On the other hand, the Amazon S3 console does not support regions, so if you sign in to the following URL https://alias.signin.aws.amazon.com/console/s3 AWS redirects you to the global sign-in endpoint at https://signin.aws.amazon.com, resulting in a global CloudTrail log entry.", "You can manually request a certain regional sign-in endpoint by signing in to the region-enabled main console home page using a URL syntax like the following: Copy https://alias.signin.aws.amazon.com/console?ap-southeast-1. AWS redirects you to the ap-southeast-1 regional sign-in endpoint and results in a regional CloudTrail log event." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R23", "name": "AWS Key Management Service", "description": "You can use the IAM section of the AWS Management Console to create, view, edit, tag, enable, disable, and delete customer master keys (CMKs) in AWS Key Management Service (AWS KMS). For more information, see the following topics.", "version": "1.1", "createdDate": "2017-07-18T20:49:47.221+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:47.221+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "AWS KMS", "tools": [ "AWS Management Console" ], "action": "Getting Started", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R23_1", "name": "Creating Keys", "type": "RUNBOOK", "status": null, "tasks": [ "To create a new CMK : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \nChoose Create key. \nType an alias for the CMK. An alias cannot begin with aws. Aliases that begin with aws are reserved by Amazon Web Services to represent AWS-managed CMKs in your account. \n An alias is a display name that you can use to identify the CMK. We recommend that you choose an alias that indicates the type of data you plan to protect or the application you plan to use with the CMK. \n(Optional) Type a description for the CMK. \n We recommend that you choose a description that explains the type of data you plan to protect or the application you plan to use with the CMK. \nChoose Next Step. \n(Optional) Type a tag key and an optional tag value. To add more than one tag to the CMK, choose Add tag. \nChoose Next Step. \nSelect which IAM users and roles can administer the CMK. \n Not \n The AWS account (root user) has full permissions by default. As a result, any IAM users and roles whose attached policies allow the appropriate permissions can also administer the CMK. \n(Optional) To prevent the IAM users and roles that you chose in the previous step from deleting this CMK, clear the box at the bottom of the page for Allow key administrators to delete this key. \nChoose Next Step. \nSelect which IAM users and roles can use the CMK to encrypt and decrypt data with the AWS KMS API. \n not \n The AWS account (root user) has full permissions by default. As a result, any IAM users and roles whose attached policies allow the appropriate permissions can also use the CMK. \n(Optional) You can use the controls at the bottom of the page to specify other AWS accounts that can use this CMK to encrypt and decrypt data. To do so, choose Add an External Account and then type the intended AWS account ID. Repeat as necessary to add more than one external account. \n Note \n Administrators of the external accounts must also allow access to the CMK by creating IAM policies for their users. For more information, see Allowing External AWS Accounts to Access a CMK. \nChoose Next Step. \nChoose Finish to create the CMK." ], "commands": [], "runbook_refs": [ "R24" ] }, { "id": "R23_2", "name": "Viewing Keys", "type": "RUNBOOK", "status": null, "tasks": [ "To view your CMK : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \n The console shows all the CMKs in your AWS account in the chosen region, including customer-managed and AWS-managed CMKs. The page displays the alias, key ID, status, and creation date for each CMK. \nTo show additional columns in the list of CMKs \n Choose the settings button (   ) in the upper-right corner of the page. \n Select the check boxes for the additional columns to show, and then choose Close." ], "commands": [], "runbook_refs": [ "R25" ] }, { "id": "R23_3", "name": "Editing Keys", "type": "RUNBOOK", "status": null, "tasks": [ "To view the key details page for a CMK : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \nChoose the alias of the CMK whose details you want to see. \n You cannot edit AWS-managed CMKs, which are denoted by the orange AWS icon.", "Modify the description : \n Use the Description field in the Summary section of the page. When you are finished, choose Save Changes.", "Add and remove key users, and allow and disallow external AWS accounts to use the CMK : \n Use the controls in the Key Users area in the Key Policy section of the page.", "Add, edit, and remove tags : \n Use the controls in the Tags section of the page.", "Enable or disable rotation : \n Use the controls in the Key Rotation section of the page." ], "commands": [], "runbook_refs": [ "R26" ] }, { "id": "R23_4", "name": "Tagging Keys", "type": "RUNBOOK", "status": null, "tasks": [ "To view the key details page for a CMK : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \nSelect the check box next to the alias of the CMK(s) whose tags you want to manage. \nYou cannot tag AWS-managed CMKs, which are denoted by the orange AWS icon. \nChoose Key actions, Add or edit tags. \nUse the controls in the Add or edit tags window. When you're finished, choose Save.", "To manage tags for your CMKs (AWS KMS API) : \n You can use the following operations in the AWS KMS API to manage tags for your CMKs. \n TagResource \n UntagResource \n ListResourceTags \nThe following examples show how to do this with the AWS Command Line Interface (AWS CLI).", "To add or update tags : \n Use the tag-resource command as in the following example.", "To remove tags : \n Use the untag-resource command as in the following example.", "To list tags : \n Use the list-resource-tags command as in the following example." ], "commands": [], "runbook_refs": [ "R27" ] }, { "id": "R23_5", "name": "Enabling and Disabling Keys", "type": "RUNBOOK", "status": null, "tasks": [ "To enable or disable a CMK : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \nSelect the check box next to the alias of the CMK(s) that you want to enable or disable. \n Note You cannot disable AWS-managed CMKs, which are denoted by the orange AWS icon. \nTo enable a CMK, choose Key actions, Enable. To disable a CMK, choose Key actions, Disable." ], "commands": [], "runbook_refs": [ "R28" ] }, { "id": "R23_6", "name": "Scheduling and Canceling Key Deletion", "type": "RUNBOOK", "status": null, "tasks": [ "How Deleting Customer Master Keys Affects AWS Services Integrated With AWS KMS : \n You create an encrypted EBS volume, at which time Amazon EBS requests a unique data key encrypted with the CMK that you specified when creating the volume. \nAWS KMS creates a new data key, encrypts it with the specified CMK, and then sends the encrypted data key to Amazon EBS to store with the volume. \nYou attach the EBS volume to an EC2 instance, at which time Amazon EC2 calls the AWS KMS Decrypt API to decrypt the EBS volume's encrypted data key. AWS KMS sends the decrypted (plaintext) data key to Amazon EC2. \nAmazon EC2 uses the plaintext data key in hypervisor memory to encrypt disk I/O to the EBS volume. The data key persists in memory as long as the EBS volume is attached to the EC2 instance. \nYou schedule the CMK for deletion. This has no immediate effect on the EC2 instance or the EBS volume, because Amazon EC2 is using the plaintext data key—not the CMK—to encrypt the EBS volume. \nThe key deletion waiting period ends, and AWS KMS deletes the CMK. This has no immediate effect on the EC2 instance or the EBS volume, because Amazon EC2 is using the plaintext data key—not the CMK—to encrypt the EBS volume.", "How Deleting Customer Master Keys Works : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \nSelect the check box next to the key that you want to delete. \nChoose Key Actions, Schedule key deletion. \nFor Waiting period (in days), type a number of days between 7 and 30. Choose Schedule deletion.", "Scheduling and Canceling Key Deletion : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \nSelect the check box next to the key that you want to recover. \nChoose Key Actions, Cancel key deletion.", "schedule key deletion : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \nSelect the check box next to the key that you want to delete. \nChoose Key Actions, Schedule key deletion. \nFor Waiting period (in days), type a number of days between 7 and 30. Choose Schedule deletion.", "cancel key deletion : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \nSelect the check box next to the key that you want to recover. \nChoose Key Actions, Cancel key deletion.", "Adding Permission to Schedule and Cancel Key Deletion (AWS Management Console) : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \nChoose the alias of the key whose permissions you want to change. \nIn the Key Policy section, under Key Deletion, select Allow key administrators to delete this key and then choose Save Changes.", "Adding Permission to Schedule and Cancel Key Deletion (AWS CLI) : \n Use the aws kms get-key-policy command to retrieve the existing key policy, and then save the policy document to a file. \nOpen the policy document in your preferred text editor, add the kms:ScheduleKeyDeletion and kms:CancelKeyDeletion permissions to the policy statement that gives permissions to the key administrators (for example, the policy statement with Sid :Allow access or Key Administrators , and save the file. The following example shows a policy statement with these two permissions: \nUse the aws kms put-key-policy command to apply the key policy to the key." ], "commands": [], "runbook_refs": [ "R29" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R24", "name": "Creating Keys", "description": "Now that you're signed up for Amazon SNS, you're ready to create a topic. A topic is a communication channel to send messages and subscribe to notifications. It provides an access point for publishers and subscribers to communicate with each other. In this section you create a topic named MyTopic.", "version": "1.1", "createdDate": "2017-07-18T20:49:47.449+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:47.449+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "AWS KMS", "tools": [ "AWS Management Console" ], "action": "Create", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R24_1", "name": "To create a new CMK", "type": "TASKS", "status": null, "tasks": [ "Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys.", "For Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner).", "Choose Create key.", "Type an alias for the CMK. An alias cannot begin with aws. Aliases that begin with aws are reserved by Amazon Web Services to represent AWS-managed CMKs in your account. \n An alias is a display name that you can use to identify the CMK. We recommend that you choose an alias that indicates the type of data you plan to protect or the application you plan to use with the CMK.", "(Optional) Type a description for the CMK. \n We recommend that you choose a description that explains the type of data you plan to protect or the application you plan to use with the CMK.", "Choose Next Step.", "(Optional) Type a tag key and an optional tag value. To add more than one tag to the CMK, choose Add tag.", "Choose Next Step.", "Select which IAM users and roles can administer the CMK. \n Not \n The AWS account (root user) has full permissions by default. As a result, any IAM users and roles whose attached policies allow the appropriate permissions can also administer the CMK.", "(Optional) To prevent the IAM users and roles that you chose in the previous step from deleting this CMK, clear the box at the bottom of the page for Allow key administrators to delete this key.", "Choose Next Step.", "Select which IAM users and roles can use the CMK to encrypt and decrypt data with the AWS KMS API. \n not \n The AWS account (root user) has full permissions by default. As a result, any IAM users and roles whose attached policies allow the appropriate permissions can also use the CMK.", "(Optional) You can use the controls at the bottom of the page to specify other AWS accounts that can use this CMK to encrypt and decrypt data. To do so, choose Add an External Account and then type the intended AWS account ID. Repeat as necessary to add more than one external account. \n Note \n Administrators of the external accounts must also allow access to the CMK by creating IAM policies for their users. For more information, see Allowing External AWS Accounts to Access a CMK.", "Choose Next Step.", "Choose Finish to create the CMK." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R25", "name": "Viewing Keys", "description": "Now that you're signed up for Amazon SNS, you're ready to create a topic. A topic is a communication channel to send messages and subscribe to notifications. It provides an access point for publishers and subscribers to communicate with each other. In this section you create a topic named MyTopic.", "version": "1.1", "createdDate": "2017-07-18T20:49:47.686+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:47.686+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "AWS KMS", "tools": [ "AWS Management Console" ], "action": "View", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R25_1", "name": "To view your CMK", "type": "TASKS", "status": null, "tasks": [ "Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys.", "For Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \n The console shows all the CMKs in your AWS account in the chosen region, including customer-managed and AWS-managed CMKs. The page displays the alias, key ID, status, and creation date for each CMK.", "To show additional columns in the list of CMKs \n Choose the settings button (   ) in the upper-right corner of the page. \n Select the check boxes for the additional columns to show, and then choose Close." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R26", "name": "Editing Keys", "description": "You can use the IAM section of the AWS Management Console to change permissions, enable or disable annual rotation of key material, and add and remove tags for customer master keys (CMKs). You start by viewing the key details page for the CMK..", "version": "1.1", "createdDate": "2017-07-18T20:49:47.922+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:47.922+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "AWS KMS", "tools": [ "AWS Management Console" ], "action": "Edit", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R26_1", "name": "To view the key details page for a CMK", "type": "RUNBOOK", "status": null, "tasks": [ "To view the key details page for a CMK : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \nChoose the alias of the CMK whose details you want to see. \n You cannot edit AWS-managed CMKs, which are denoted by the orange AWS icon." ], "commands": [], "runbook_refs": [ "R27" ] }, { "id": "R26_2", "name": "Modify the description", "type": "TASKS", "status": null, "tasks": [ "Use the Description field in the Summary section of the page. When you are finished, choose Save Changes." ], "commands": [], "runbook_refs": [] }, { "id": "R26_3", "name": "Add and remove key users, and allow and disallow external AWS accounts to use the CMK", "type": "TASKS", "status": null, "tasks": [ "Use the controls in the Key Users area in the Key Policy section of the page." ], "commands": [], "runbook_refs": [] }, { "id": "R26_4", "name": "Add, edit, and remove tags", "type": "TASKS", "status": null, "tasks": [ "Use the controls in the Tags section of the page." ], "commands": [], "runbook_refs": [] }, { "id": "R26_5", "name": "Enable or disable rotation", "type": "TASKS", "status": null, "tasks": [ "Use the controls in the Key Rotation section of the page." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R27", "name": "To view the key details page for a CMK", "description": "You can use the IAM section of the AWS Management Console to change permissions, enable or disable annual rotation of key material, and add and remove tags for customer master keys (CMKs). You start by viewing the key details page for the CMK..", "version": "1.1", "createdDate": "2017-07-18T20:49:48.151+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:48.151+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "AWS KMS", "tools": [ "AWS Management Console" ], "action": "Edit", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R27_1", "name": "To view the key details page for a CMK", "type": "TASKS", "status": null, "tasks": [ "Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys.", "For Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner).", "Choose the alias of the CMK whose details you want to see. \n You cannot edit AWS-managed CMKs, which are denoted by the orange AWS icon." ], "commands": [], "runbook_refs": [ "R28" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R28", "name": "Tagging Keys", "description": "A tag is a label that you assign to an AWS resource. You can assign tags to your customer master keys (CMKs). Each tag consists of a tag key and a tag value, both of which you define. For example, the tag key might be Cost Center  and the tag value might be 87654.You can use tags for a variety of purposes. One common use is to categorize and track your AWS costs. You can apply tags that represent business categories (such as cost centers, application names, or owners) to organize your costs across multiple services. When you add tags to your AWS resources, AWS generates a cost allocation report with usage and costs aggregated by tags. You can use this report to view your AWS KMS costs in terms of projects or applications, instead of viewing all AWS KMS costs as a single line item.For more information about using tags for cost allocation, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide.", "version": "1.1", "createdDate": "2017-07-18T20:49:48.379+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:48.379+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "AWS KMS", "tools": [ "AWS Management Console" ], "action": "Tag", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R28_1", "name": "Managing Tags", "type": "RUNBOOK", "status": null, "tasks": [ "To view the key details page for a CMK : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \nSelect the check box next to the alias of the CMK(s) whose tags you want to manage. \nYou cannot tag AWS-managed CMKs, which are denoted by the orange AWS icon. \nChoose Key actions, Add or edit tags. \nUse the controls in the Add or edit tags window. When you're finished, choose Save." ], "commands": [], "runbook_refs": [ "R29" ] }, { "id": "R28_2", "name": "To manage tags for your CMKs (AWS KMS API)", "type": "TASKS", "status": null, "tasks": [ "You can use the following operations in the AWS KMS API to manage tags for your CMKs. \n TagResource \n UntagResource \n ListResourceTags", "The following examples show how to do this with the AWS Command Line Interface (AWS CLI)." ], "commands": [], "runbook_refs": [] }, { "id": "R28_3", "name": "To add or update tags", "type": "TASKS", "status": null, "tasks": [ "Use the tag-resource command as in the following example." ], "commands": [ "aws kms tag-resource --tags TagKey=Purpose,TagValue=Test --key-id 1234abcd-12ab-34cd-56ef-1234567890ab" ], "runbook_refs": [] }, { "id": "R28_4", "name": "To remove tags", "type": "TASKS", "status": null, "tasks": [ "Use the untag-resource command as in the following example." ], "commands": [ "aws kms untag-resource --tag-keys Purpose --key-id 1234abcd-12ab-34cd-56ef-1234567890ab" ], "runbook_refs": [] }, { "id": "R28_5", "name": "To list tags", "type": "TASKS", "status": null, "tasks": [ "Use the list-resource-tags command as in the following example." ], "commands": [ "aws kms list-resource-tags --key-id 1234abcd-12ab-34cd-56ef-1234567890ab" ], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R29", "name": "To view the key details page for a CMK", "description": "You can use the IAM section of the AWS Management Console to change permissions, enable or disable annual rotation of key material, and add and remove tags for customer master keys (CMKs). You start by viewing the key details page for the CMK..", "version": "1.1", "createdDate": "2017-07-18T20:49:48.616+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:48.616+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "AWS KMS", "tools": [ "AWS Management Console" ], "action": "View", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R29_1", "name": "To view the key details page for a CMK", "type": "TASKS", "status": null, "tasks": [ "Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys.", "For Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner).", "Select the check box next to the alias of the CMK(s) whose tags you want to manage.", "You cannot tag AWS-managed CMKs, which are denoted by the orange AWS icon.", "Choose Key actions, Add or edit tags.", "Use the controls in the Add or edit tags window. When you're finished, choose Save." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R30", "name": "Enabling and Disabling Keys", "description": "You can use the IAM section of the AWS Management Console to enable and disable customer master keys (CMKs). When you create a CMK, it is enabled by default. If you disable a CMK, it cannot be used to encrypt or decrypt data. Note that AWS-managed CMKs are permanently enabled for use by services that use AWS KMS. You cannot disable them.You can also delete CMKs. For more information, see Deleting Customer Master Keys", "version": "1.1", "createdDate": "2017-07-18T20:49:48.843+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:48.843+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "AWS KMS", "tools": [ "AWS Management Console" ], "action": "Enabling and Disabling", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R30_1", "name": "To enable or disable a CMK", "type": "TASKS", "status": null, "tasks": [ "Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys.", "For Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner).", "Select the check box next to the alias of the CMK(s) that you want to enable or disable. \n Note You cannot disable AWS-managed CMKs, which are denoted by the orange AWS icon.", "To enable a CMK, choose Key actions, Enable. To disable a CMK, choose Key actions, Disable." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R31", "name": "Deleting Customer Master Keys", "description": "Deleting a customer master key (CMK) in AWS Key Management Service (AWS KMS) is destructive and potentially dangerous. It deletes the key material and all metadata associated with the CMK, and is irreversible. After a CMK is deleted you can no longer decrypt the data that was encrypted under that key, which means that data becomes unrecoverable. You should delete a CMK only when you are sure that you don't need to use it anymore. If you are not sure, consider disabling the CMK instead of deleting it. You can re-enable a disabled CMK if you need to use it again later, but you cannot recover a deleted CMK. Before deleting a CMK, you might want to know how many ciphertexts were encrypted under that CMK.", "version": "1.1", "createdDate": "2017-07-18T20:49:49.084+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:49.084+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "AWS KMS", "tools": [ "AWS Management Console" ], "action": "Delete", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R31_1", "name": "How Deleting Customer Master Keys Works", "type": "RUNBOOK", "status": null, "tasks": [ "How Deleting Customer Master Keys Affects AWS Services Integrated With AWS KMS : \n You create an encrypted EBS volume, at which time Amazon EBS requests a unique data key encrypted with the CMK that you specified when creating the volume. \nAWS KMS creates a new data key, encrypts it with the specified CMK, and then sends the encrypted data key to Amazon EBS to store with the volume. \nYou attach the EBS volume to an EC2 instance, at which time Amazon EC2 calls the AWS KMS Decrypt API to decrypt the EBS volume's encrypted data key. AWS KMS sends the decrypted (plaintext) data key to Amazon EC2. \nAmazon EC2 uses the plaintext data key in hypervisor memory to encrypt disk I/O to the EBS volume. The data key persists in memory as long as the EBS volume is attached to the EC2 instance. \nYou schedule the CMK for deletion. This has no immediate effect on the EC2 instance or the EBS volume, because Amazon EC2 is using the plaintext data key—not the CMK—to encrypt the EBS volume. \nThe key deletion waiting period ends, and AWS KMS deletes the CMK. This has no immediate effect on the EC2 instance or the EBS volume, because Amazon EC2 is using the plaintext data key—not the CMK—to encrypt the EBS volume.", "How Deleting Customer Master Keys Works : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \nSelect the check box next to the key that you want to delete. \nChoose Key Actions, Schedule key deletion. \nFor Waiting period (in days), type a number of days between 7 and 30. Choose Schedule deletion.", "Scheduling and Canceling Key Deletion : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \nSelect the check box next to the key that you want to recover. \nChoose Key Actions, Cancel key deletion." ], "commands": [], "runbook_refs": [ "R32" ] }, { "id": "R31_2", "name": "Scheduling and Canceling Key Deletion", "type": "RUNBOOK", "status": null, "tasks": [ "schedule key deletion : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \nSelect the check box next to the key that you want to delete. \nChoose Key Actions, Schedule key deletion. \nFor Waiting period (in days), type a number of days between 7 and 30. Choose Schedule deletion.", "cancel key deletion : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \nSelect the check box next to the key that you want to recover. \nChoose Key Actions, Cancel key deletion." ], "commands": [], "runbook_refs": [ "R33" ] }, { "id": "R31_3", "name": "Adding Permission to Schedule and Cancel Key Deletion", "type": "RUNBOOK", "status": null, "tasks": [ "Adding Permission to Schedule and Cancel Key Deletion (AWS Management Console) : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \nChoose the alias of the key whose permissions you want to change. \nIn the Key Policy section, under Key Deletion, select Allow key administrators to delete this key and then choose Save Changes.", "Adding Permission to Schedule and Cancel Key Deletion (AWS CLI) : \n Use the aws kms get-key-policy command to retrieve the existing key policy, and then save the policy document to a file. \nOpen the policy document in your preferred text editor, add the kms:ScheduleKeyDeletion and kms:CancelKeyDeletion permissions to the policy statement that gives permissions to the key administrators (for example, the policy statement with Sid :Allow access or Key Administrators , and save the file. The following example shows a policy statement with these two permissions: \nUse the aws kms put-key-policy command to apply the key policy to the key." ], "commands": [], "runbook_refs": [ "R34" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R32", "name": "How Deleting Customer Master Keys Works", "description": "Because it is destructive and potentially dangerous to delete a customer master key (CMK), AWS KMS enforces a waiting period. To delete a CMK in AWS KMS you schedule key deletion. You can set the waiting period from a minimum of 7 days up to a maximum of 30 days. The default waiting period is 30 days. During the waiting period, the CMK is pending deletion which means it can't be used. After the waiting period ends, AWS KMS deletes the CMK and all AWS KMS data associated with it, including all aliases that point to it.When you schedule key deletion, AWS KMS reports the date and time when the waiting period ends. This date and time is at least the specified number of days from when you scheduled key deletion, but it can be up to 24 hours longer. For example, when you schedule key deletion and specify a waiting period of 7 days, the end of the waiting period occurs no earlier than 7 days and no more than 8 days from the time of your request. You can confirm the exact date and time when the waiting period ends in the AWS Management Console, AWS CLI, or AWS KMS API.Use the waiting period to ensure that you don't need the CMK now or in the future. You can configure an Amazon CloudWatch alarm to warn you if a person or application attempts to use the CMK during the waiting period. To recover the CMK, you can cancel key deletion before the waiting period ends. After the waiting period ends you cannot cancel key deletion, and AWS KMS deletes the CMK.", "version": "1.1", "createdDate": "2017-07-18T20:49:49.313+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:49.313+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "AWS KMS", "tools": [ "AWS Management Console" ], "action": "Delete", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R32_1", "name": "How Deleting Customer Master Keys Affects AWS Services Integrated With AWS KMS", "type": "TASKS", "status": null, "tasks": [ "You create an encrypted EBS volume, at which time Amazon EBS requests a unique data key encrypted with the CMK that you specified when creating the volume.", "AWS KMS creates a new data key, encrypts it with the specified CMK, and then sends the encrypted data key to Amazon EBS to store with the volume.", "You attach the EBS volume to an EC2 instance, at which time Amazon EC2 calls the AWS KMS Decrypt API to decrypt the EBS volume's encrypted data key. AWS KMS sends the decrypted (plaintext) data key to Amazon EC2.", "Amazon EC2 uses the plaintext data key in hypervisor memory to encrypt disk I/O to the EBS volume. The data key persists in memory as long as the EBS volume is attached to the EC2 instance.", "You schedule the CMK for deletion. This has no immediate effect on the EC2 instance or the EBS volume, because Amazon EC2 is using the plaintext data key—not the CMK—to encrypt the EBS volume.", "The key deletion waiting period ends, and AWS KMS deletes the CMK. This has no immediate effect on the EC2 instance or the EBS volume, because Amazon EC2 is using the plaintext data key—not the CMK—to encrypt the EBS volume." ], "commands": [], "runbook_refs": [ "R33" ] }, { "id": "R32_2", "name": "Scheduling and Canceling Key Deletion", "type": "RUNBOOK", "status": null, "tasks": [ "How Deleting Customer Master Keys Works : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \nSelect the check box next to the key that you want to delete. \nChoose Key Actions, Schedule key deletion. \nFor Waiting period (in days), type a number of days between 7 and 30. Choose Schedule deletion.", "Scheduling and Canceling Key Deletion : \n Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys. \nFor Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner). \nSelect the check box next to the key that you want to recover. \nChoose Key Actions, Cancel key deletion." ], "commands": [], "runbook_refs": [ "R34" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R33", "name": "Scheduling and Canceling Key Deletion", "description": "You can schedule and cancel key deletion in the AWS Management Console.", "version": "1.1", "createdDate": "2017-07-18T20:49:49.541+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:49.541+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "AWS KMS", "tools": [ "AWS Management Console" ], "action": "Schedule and cancel", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R33_1", "name": "schedule key deletion", "type": "TASKS", "status": null, "tasks": [ "Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys.", "For Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner).", "Select the check box next to the key that you want to delete.", "Choose Key Actions, Schedule key deletion.", "For Waiting period (in days), type a number of days between 7 and 30. Choose Schedule deletion." ], "commands": [], "runbook_refs": [] }, { "id": "R33_2", "name": "cancel key deletion", "type": "TASKS", "status": null, "tasks": [ "Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys.", "For Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner).", "Select the check box next to the key that you want to recover.", "Choose Key Actions, Cancel key deletion." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R34", "name": "To schedule key deletion", "description": "You can schedule and cancel key deletion in the AWS Management Console.", "version": "1.1", "createdDate": "2017-07-18T20:49:49.774+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:49.774+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "AWS KMS", "tools": [ "AWS Management Console" ], "action": "Schedule deletion", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R34_1", "name": "How Deleting Customer Master Keys Works", "type": "TASKS", "status": null, "tasks": [ "Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys.", "For Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner).", "Select the check box next to the key that you want to delete.", "Choose Key Actions, Schedule key deletion.", "For Waiting period (in days), type a number of days between 7 and 30. Choose Schedule deletion." ], "commands": [], "runbook_refs": [] }, { "id": "R34_2", "name": "Scheduling and Canceling Key Deletion", "type": "RUNBOOK", "status": null, "tasks": [ "Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys.", "For Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner).", "Select the check box next to the key that you want to recover.", "Choose Key Actions, Cancel key deletion." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R35", "name": "Adding Permission to Schedule and Cancel Key Deletion", "description": "If you use IAM policies to allow AWS KMS permissions, all IAM users and roles that have AWS administrator access or AWS KMS full access Actionkms: are already allowed to schedule and cancel key deletion for AWS KMS CMKs. If you rely on the key policy alone to allow AWS KMS permissions, you might need to add additional permissions to allow your IAM users and roles to delete CMKs. To add those permissions, see the following steps.The following procedures describe how to add permissions to a key policy using the AWS Management Console or the AWS CLI.Ways to add permission to schedule and cancel key deletion.Using the AWS Management Console. \n Using the AWS CLI", "version": "1.1", "createdDate": "2017-07-18T20:49:50.008+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:50.008+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "AWS KMS", "tools": [ "AWS Management Console" ], "action": "Schedule", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R35_1", "name": "Adding Permission to Schedule and Cancel Key Deletion (AWS Management Console)", "type": "TASKS", "status": null, "tasks": [ "Open the Encryption Keys section of the Identity and Access Management (IAM) console at https://console.aws.amazon.com/iam/home#encryptionKeys.", "For Region, choose the appropriate AWS region. Do not use the region selector in the navigation bar (top right corner).", "Choose the alias of the key whose permissions you want to change.", "In the Key Policy section, under Key Deletion, select Allow key administrators to delete this key and then choose Save Changes." ], "commands": [], "runbook_refs": [] }, { "id": "R35_2", "name": "Adding Permission to Schedule and Cancel Key Deletion (AWS CLI)", "type": "TASKS", "status": null, "tasks": [ "Use the aws kms get-key-policy command to retrieve the existing key policy, and then save the policy document to a file.", "Open the policy document in your preferred text editor, add the kms:ScheduleKeyDeletion and kms:CancelKeyDeletion permissions to the policy statement that gives permissions to the key administrators (for example, the policy statement with Sid :Allow access or Key Administrators , and save the file. The following example shows a policy statement with these two permissions:", "Use the aws kms put-key-policy command to apply the key policy to the key." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R36", "name": "Creating Amazon Lex Bots", "description": "The example bot in this exercise schedules appointments for a dentist's office. The example also illustrates using response cards to obtain user input with buttons. Specifically, the example illustrates generating response cards dynamically at runtime.", "version": "1.1", "createdDate": "2017-07-18T20:49:50.236+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:50.236+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon Lex", "tools": [ "Lex Console" ], "action": "Getting Started", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R36_1", "name": "Overview of the Bot Blueprint (ScheduleAppointment)", "type": "RUNBOOK", "status": null, "tasks": [ "Overview of the Bot Blueprint (ScheduleAppointment) : \n The ScheduleAppointment blueprint that you use to create a bot for this exercise is preconfigured with the following: \n [1]Slot types: One custom slot type called AppointmentTypeValue, with the enumeration values root canal, cleaning, and whitening. \n [2]Intent : One intent (MakeAppointment), which is preconfigured as follows: \n [a]Slots – The intent is configured with the following slots:\n\tSlot AppointmentType, of the AppointmentTypes custom type.\n\tSlot Date, of the AMAZON.DATE built-in type.\n\tSlot Time, of the AMAZON.TIME built-in type.\n [b]Utterances – The intent is preconfigured with the following utterances:\n\t\"I would like to book an appointment\"\n\t\"Book an appointment\"\n\t\"Book a {AppointmentType}\"\n\tIf the user utters any of these, Amazon Lex determines that MakeAppointment is the intent, and then uses the prompts to elicit slot data.[c]Prompts – The intent is preconfigured with the following prompts:\n\tPrompt for the AppointmentType slot – \"What type of appointment would you like to schedule?\"\n\tPrompt for the Date slot – \"When should I schedule your {AppointmentType}?\"\n\tPrompt for the Time slot – \"At what time do you want to schedule the {AppointmentType}?\" and\n\t\"At what time on {Date}?\"\n\tConfirmation prompt – \"{Time} is available, should I go ahead and book your appointment?\"\n\tCancel message– \"Okay, I will not schedule an appointment.\"" ], "commands": [], "runbook_refs": [ "R37" ] }, { "id": "R36_2", "name": "Overview of the Lambda Function Blueprint (lex-make-appointment-python)", "type": "RUNBOOK", "status": null, "tasks": [ "Overview of the Lambda Function Blueprint (lex-make-appointment-python) : \n This Lambda function blueprint code can perform both initialization/validation and fulfillment tasks.\n[1]The Lambda function code showcases a dynamic conversation that is based on example availability for a dentist appointment (in real applications, you might use a calendar). For the day or date that the user specifies, the code is configured as follows:\n[a]If there are no appointments available, the Lambda function returns a response directing Amazon Lex to prompt the user for another day or date (by setting the dialogAction type to ElicitSlot). For more information, see Response Format.\n[b]If there is only one appointment available on the specified day or date, the Lambda function suggests the available time in the response and directs Amazon Lex to obtain user confirmation by setting the dialogAction in the response to ConfirmIntent. This illustrates how you can improve the user experience by proactively suggesting the available time for an appointment.\n[c]If there are multiple appointments available, the Lambda function returns a list of available times in the response to Amazon Lex. Amazon Lex returns a response to the client with the message from the Lambda function. \n[2]As the fulfillment code hook, the Lambda function returns a summary message indicating that an appointment is scheduled (that is, the intent is fulfilled)." ], "commands": [], "runbook_refs": [ "R38" ] }, { "id": "R36_3", "name": "Create an Amazon Lex Bot", "type": "RUNBOOK", "status": null, "tasks": [ "Create an Amazon Lex Bot : \n Sign in to the AWS Management Console and open the Amazon Lex console at https://console.aws.amazon.com/lex/. \nOn the Bots page, choose Create. \nOn the Create your Lex bot page, do the following: \n[1]Choose the ScheduleAppointment blueprint.\n[2]Leave the default bot name (ScheduleAppointment). \nChoose Create. \nThe console shows the ScheduleAppointment bot. On the Editor tab, review the preconfigured intent (MakeAppointment) details. \nTest the bot in the test window." ], "commands": [], "runbook_refs": [ "R39" ] }, { "id": "R36_4", "name": "Create a Lambda Function", "type": "RUNBOOK", "status": null, "tasks": [ "Create a Lambda Function : \n Sign in to the AWS Management Console and open the AWS Lambda console at https://console.aws.amazon.com/lambda/. \nChoose Create a Lambda function. \nFor Select blueprint, type lex to find the blueprint, and then choose the lex-make-appointment-python blueprint. \nConfigure the Lambda function as follows, and then choose Create Function.\n[1]Type the Lambda function name (MakeAppointmentCodeHook).\n[2]For the role, choose Create a new role from template(s), and then type a role name.\n[3]Leave other default values. \nTest the Lambda function.\n[1]Choose Actions, and then chooseConfigure test event.\n[2]From the Sample event template list, choose Lex-Make Appointment (preview). This sample event uses the Amazon Lex request/response model, with values set to match a request from your Amazon Lex bot. For information about the Amazon Lex request/response model, see Using Lambda Functions.\n[3]Choose Save and test.\n[4]Verify that the Lambda function successfully executed. The response in this case matches the Amazon Lex response model." ], "commands": [], "runbook_refs": [ "R40" ] }, { "id": "R36_5", "name": "Update the Intent: Configure a Code Hook", "type": "RUNBOOK", "status": null, "tasks": [ "Update the Intent: Configure a Code Hook : \n In the Amazon Lex console, select the ScheduleAppointment bot. The console shows the MakeAppointment intent. Modify the intent configuration as follows:\nNote: You can update only the $LATEST versions of any of the Amazon Lex resources, including the intents. Make sure that the intent version is set to $LATEST. You have not published a version of your bot yet, so it should still be the $LATEST version in the console.\n[a]In the Options section, choose Initialization and validation code hook, and then choose the Lambda function from the list.\n[b]In the Fulfillment section, choose AWS Lambda function, and then choose the Lambda function from the list.\n[c]Choose Goodbye message, and type a message. \nChoose Save, and then choose Build. \nTest the bot." ], "commands": [], "runbook_refs": [ "R41" ] }, { "id": "R36_6", "name": "Deploy the Bot on the Facebook Messenger Platform", "type": "RUNBOOK", "status": null, "tasks": [ "Deploy the Bot on the Facebook Messenger Platform : \n In the preceding section, you tested the ScheduleAppointment bot using the client in the Amazon Lex console. Currently, the Amazon Lex console does not support response cards. To test the dynamically generated response cards that the bot supports, deploy the bot on the Facebook Messenger platform and test it." ], "commands": [], "runbook_refs": [ "R42" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R37", "name": "Overview of the Bot Blueprint", "description": "The ScheduleAppointment blueprint that you use to create a bot for this exercise is preconfigured with the following tasks.", "version": "1.1", "createdDate": "2017-07-18T20:49:50.472+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:50.472+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon Lex", "tools": [ "Lex Console" ], "action": "Overview", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R37_1", "name": "Overview of the Bot Blueprint (ScheduleAppointment)", "type": "TASKS", "status": null, "tasks": [ "The ScheduleAppointment blueprint that you use to create a bot for this exercise is preconfigured with the following: \n [1]Slot types: One custom slot type called AppointmentTypeValue, with the enumeration values root canal, cleaning, and whitening. \n [2]Intent : One intent (MakeAppointment), which is preconfigured as follows: \n [a]Slots – The intent is configured with the following slots:\n\tSlot AppointmentType, of the AppointmentTypes custom type.\n\tSlot Date, of the AMAZON.DATE built-in type.\n\tSlot Time, of the AMAZON.TIME built-in type.\n [b]Utterances – The intent is preconfigured with the following utterances:\n\t\"I would like to book an appointment\"\n\t\"Book an appointment\"\n\t\"Book a {AppointmentType}\"\n\tIf the user utters any of these, Amazon Lex determines that MakeAppointment is the intent, and then uses the prompts to elicit slot data.[c]Prompts – The intent is preconfigured with the following prompts:\n\tPrompt for the AppointmentType slot – \"What type of appointment would you like to schedule?\"\n\tPrompt for the Date slot – \"When should I schedule your {AppointmentType}?\"\n\tPrompt for the Time slot – \"At what time do you want to schedule the {AppointmentType}?\" and\n\t\"At what time on {Date}?\"\n\tConfirmation prompt – \"{Time} is available, should I go ahead and book your appointment?\"\n\tCancel message– \"Okay, I will not schedule an appointment.\"" ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R38", "name": "Overview of the Lambda Function Blueprint", "description": "The Lambda function blueprint (lex-make-appointment-python) is a code hook for bots that you create using the ScheduleAppointment bot blueprint.", "version": "1.1", "createdDate": "2017-07-18T20:49:50.705+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:50.705+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon Lex", "tools": [ "Lex Console" ], "action": "Overview", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R38_1", "name": "Overview of the Lambda Function Blueprint (lex-make-appointment-python)", "type": "TASKS", "status": null, "tasks": [ "This Lambda function blueprint code can perform both initialization/validation and fulfillment tasks.\n[1]The Lambda function code showcases a dynamic conversation that is based on example availability for a dentist appointment (in real applications, you might use a calendar). For the day or date that the user specifies, the code is configured as follows:\n[a]If there are no appointments available, the Lambda function returns a response directing Amazon Lex to prompt the user for another day or date (by setting the dialogAction type to ElicitSlot). For more information, see Response Format.\n[b]If there is only one appointment available on the specified day or date, the Lambda function suggests the available time in the response and directs Amazon Lex to obtain user confirmation by setting the dialogAction in the response to ConfirmIntent. This illustrates how you can improve the user experience by proactively suggesting the available time for an appointment.\n[c]If there are multiple appointments available, the Lambda function returns a list of available times in the response to Amazon Lex. Amazon Lex returns a response to the client with the message from the Lambda function. \n[2]As the fulfillment code hook, the Lambda function returns a summary message indicating that an appointment is scheduled (that is, the intent is fulfilled)." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R39", "name": "Create an Amazon Lex Bot", "description": "In this section, you create an Amazon Lex bot using the ScheduleAppointment blueprint, which is provided in the Amazon Lex console.", "version": "1.1", "createdDate": "2017-07-18T20:49:50.934+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:50.934+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon Lex", "tools": [ "Lex Console" ], "action": "Create", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R39_1", "name": "Create an Amazon Lex Bot", "type": "TASKS", "status": null, "tasks": [ "Sign in to the AWS Management Console and open the Amazon Lex console at https://console.aws.amazon.com/lex/.", "On the Bots page, choose Create.", "On the Create your Lex bot page, do the following: \n[1]Choose the ScheduleAppointment blueprint.\n[2]Leave the default bot name (ScheduleAppointment).", "Choose Create.", "The console shows the ScheduleAppointment bot. On the Editor tab, review the preconfigured intent (MakeAppointment) details.", "Test the bot in the test window." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R40", "name": "Create a Lambda Function", "description": "In this section, you create a Lambda function using a blueprint (lex-make-appointment-python) that is provided in the Lambda console. You also test the Lambda function by invoking it using sample Amazon Lex event data that is provided by the console.", "version": "1.1", "createdDate": "2017-07-18T20:49:51.165+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:51.165+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon Lex", "tools": [ "Lex Console" ], "action": "Create", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R40_1", "name": "Create a Lambda Function", "type": "TASKS", "status": null, "tasks": [ "Sign in to the AWS Management Console and open the AWS Lambda console at https://console.aws.amazon.com/lambda/.", "Choose Create a Lambda function.", "For Select blueprint, type lex to find the blueprint, and then choose the lex-make-appointment-python blueprint.", "Configure the Lambda function as follows, and then choose Create Function.\n[1]Type the Lambda function name (MakeAppointmentCodeHook).\n[2]For the role, choose Create a new role from template(s), and then type a role name.\n[3]Leave other default values.", "Test the Lambda function.\n[1]Choose Actions, and then chooseConfigure test event.\n[2]From the Sample event template list, choose Lex-Make Appointment (preview). This sample event uses the Amazon Lex request/response model, with values set to match a request from your Amazon Lex bot. For information about the Amazon Lex request/response model, see Using Lambda Functions.\n[3]Choose Save and test.\n[4]Verify that the Lambda function successfully executed. The response in this case matches the Amazon Lex response model." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R41", "name": "Update the Intent: Configure a Code Hook", "description": "In this section, you update the configuration of the MakeAppointment intent to use the Lambda function as a code hook for the validation and fulfillment activities.", "version": "1.1", "createdDate": "2017-07-18T20:49:51.399+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:51.399+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon Lex", "tools": [ "Lex Console" ], "action": "Update Intent", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R41_1", "name": "Update the Intent: Configure a Code Hook", "type": "TASKS", "status": null, "tasks": [ "In the Amazon Lex console, select the ScheduleAppointment bot. The console shows the MakeAppointment intent. Modify the intent configuration as follows:\nNote: You can update only the $LATEST versions of any of the Amazon Lex resources, including the intents. Make sure that the intent version is set to $LATEST. You have not published a version of your bot yet, so it should still be the $LATEST version in the console.\n[a]In the Options section, choose Initialization and validation code hook, and then choose the Lambda function from the list.\n[b]In the Fulfillment section, choose AWS Lambda function, and then choose the Lambda function from the list.\n[c]Choose Goodbye message, and type a message.", "Choose Save, and then choose Build.", "Test the bot." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R42", "name": "Deploy the Bot on the Facebook Messenger Platform", "description": "Deploy the Bot on the Facebook Messenger Platform", "version": "1.1", "createdDate": "2017-07-18T20:49:51.626+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:51.627+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon Lex", "tools": [ "Lex Console" ], "action": "Deploy", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R42_1", "name": "Deploy the Bot on the Facebook Messenger Platform", "type": "TASKS", "status": null, "tasks": [ "In the preceding section, you tested the ScheduleAppointment bot using the client in the Amazon Lex console. Currently, the Amazon Lex console does not support response cards. To test the dynamically generated response cards that the bot supports, deploy the bot on the Facebook Messenger platform and test it." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R43", "name": "Working with the AWS Management Console", "description": "The AWS Management Console is a web application for managing Amazon Web Services. The console provides an intuitive user interface for performing many AWS tasks. These include working with Amazon S3 buckets, launching and connecting to Amazon EC2 instances, setting Amazon CloudWatch alarms, and so on. Each service has its own console, which you can access from the AWS Management Console. The console also provides information about your account and about billing..", "version": "1.1", "createdDate": "2017-07-18T20:49:51.864+0530", "createdBy": "Hazarath", "modifiedDate": "2017-07-18T20:49:51.864+0530", "modifiedBy": "Hazarath", "status": "ACTIVE", "prerequisites": [], "product": "AWS Management Console", "tools": [ "AWS Management Console" ], "action": "Walkthrough", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R43_1", "name": "Getting Started with a Service", "type": "TASKS", "status": null, "tasks": [ "To open a console for a service. Do one of the following", "Type the name of the service in the search box. Then choose the service that you want from the list of search results.", "Choose one of your recently visited services under the search box.", "Choose Services to open a full list of services. On the upper right of the page, choose Group to see the services listed by category or choose A–Z to see an alphabetical listing. Then choose the service that you want." ], "commands": [], "runbook_refs": [] }, { "id": "R43_2", "name": "Adding and Removing Shortcuts", "type": "TASKS", "status": null, "tasks": [ "You can add shortcuts for the consoles that you use most.", "To add a shortcut \n", "On the navigation bar, choose the pushpin icon.", "Drag a service from the menu to the navigation bar.You can add more shortcuts and drop them onto the navigation bar in any order that you want.", "To remove a shortcut \n", "On the navigation bar, choose the pushpin icon.", "Drag the shortcut off the navigation bar." ], "commands": [], "runbook_refs": [] }, { "id": "R43_3", "name": "Selecting a Region", "type": "TASKS", "status": null, "tasks": [ "For many services, you can select a region that specifies where your resources are managed. You do not select a region for the AWS Management Console or for some services, such as IAM.", "To select a region \n", "In the AWS Management Console, choose a service to go to that service's console.", "In the navigation bar, choose the name of the currently selected region.", "When you select a region, that region becomes the default in the console. \n  Note \n If you have created AWS resources, but you don’t see those resources in the console, the console might be displaying resources from a different region. Some resources (such as EC2 instances) are created in a specific region. To see them, use the region selector to choose the region in which the resources were created." ], "commands": [], "runbook_refs": [] }, { "id": "R43_4", "name": "Changing Your Password", "type": "TASKS", "status": null, "tasks": [ "If you are an account owner, you can change your AWS account password from the console. \n To change your password", "In the navigation bar, choose your account name.", "Choose Security Credentials.", "The page you see varies with the type of account that you used to sign in. Follow the console instructions to get to the page for changing your password.", "Type your current password once and your new password twice. \n The new password must be at least eight characters long and must include a symbol, a number, an uppercase letter, and a lowercase letter.", "When you've completed the password form, choose Change Password or Save changes." ], "commands": [], "runbook_refs": [] }, { "id": "R43_5", "name": "Getting Billing Information", "type": "TASKS", "status": null, "tasks": [ "If you have the necessary permissions, you can get information about your AWS charges from the console. \n To get your billing information", "In the navigation bar, choose your account name.", "Choose My Billing Dashboard.", "Use the AWS Billing and Cost Management dashboard to find a summary and a breakdown of your monthly spending. To learn more, see the AWS Billing and Cost Management User Guide." ], "commands": [], "runbook_refs": [] }, { "id": "R43_6", "name": "Using the Device of Your Choice", "type": "TASKS", "status": null, "tasks": [ "The AWS Management Console has been designed to work on tablets as well as other kinds of devices:", "Horizontal and vertical space is maximized to show more on your screen.", "Buttons and selectors are larger for a better touch experience.", "The AWS Management Console is also available as an app for Android and iOS. This app provides mobile-relevant tasks that are a good companion to the full web experience. For example, you can easily view and manage your existing Amazon EC2 instances and Amazon CloudWatch alarms from your phone." ], "commands": [], "runbook_refs": [] }, { "id": "R43_7", "name": "Troubleshooting", "type": "TASKS", "status": null, "tasks": [ "If you use the AWS Management Console with Internet Explorer 11, the browser might fail to load some pages of the console. This is a problem related to Internet Explorer's Compatibility View. To address this issue, in Internet Explorer, open Compatibility View Settings and disable Display intranet sites in Compatibility View." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R44", "name": "Getting Started with Amazon Route 53", "description": "This Getting Started tutorial shows you how to perform the following tasks: \n Register a domain name, such as example.com \n Create an Amazon S3 bucket and configure it to host a website \n Create a sample website and save the file in your S3 bucket \n Configure Amazon Route 53 to route traffic to your new website \n When you're finished, you'll be able to open a browser, enter the name of your domain, and view your website.", "version": "1.1", "createdDate": "2017-07-18T20:49:52.097+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:52.098+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon Route 53", "tools": [ "Route 53 console" ], "action": "Getting Started", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R44_1", "name": "Register a domain (Amazon Route 53)", "type": "RUNBOOK", "status": null, "tasks": [ "To register a new domain using Amazon Route 53 (Amazon Route 53) : \n Sign in to the AWS Management Console and open the Amazon Route 53 console at https://console.aws.amazon.com/route53/. \nIf you're new to Amazon Route 53, under Domain Registration, choose Get Started Now. \n If you're already using Amazon Route 53, in the navigation pane, choose Registered Domains. \nChoose Register Domain. \nEnter the domain name that you want to register, and choose Check to find out whether the domain name is available. \n For information about how to specify characters other than a-z, 0-9, and - (hyphen) and how to specify internationalized domain names, see DNS Domain Name Format. \nIf the domain is available, choose Add to cart. The domain name appears in your shopping cart. \n The Related domain suggestions list shows other domains that you might want to register instead of your first choice (if it's not available) or in addition to your first choice. Choose Add to cart for each additional domain that you want to register, up to a maximum of five domains. \n If the domain name isn't available and you don't want one of the suggested domain names, repeat step 4 until you find an available domain name that you like. \n NOTE: If you also want your users to be able to use www.your-domain-name, such as www.example.com, to access your sample website, you don't need to register a second domain. Later in this Getting Started topic, we explain how to route traffic for www.your-domain-name to your website. \nIn the shopping cart, choose the number of years that you want to register the domain for. \nTo register more domains, repeat steps 4 through 6. \nChoose Continue. \nOn the Contact Details for Your n Domains page, enter contact information for the domain registrant, administrator, and technical contacts. The values that you enter here are applied to all of the domains that you're registering. \n By default, we use the same information for all three contacts. If you want to enter different information for one or more contacts, change the value of My Registrant, Administrative, and Technical Contacts are all the same to No. \n If you're registering more than one domain, we use the same contact information for all of the domains. \n For more information, see Values that You Specify When You Register a Domain. \nFor some top-level domains (TLDs), we're required to collect additional information. For these TLDs, enter the applicable values after the Postal/Zip Code field. \nChoose whether you want to hide your contact information from WHOIS queries. For more information, see the following topics: \n Enabling or Disabling Privacy Protection for Contact Information for a Domain \n Domains That You Can Register with Amazon Route 53 \nChoose Continue. \nReview the information that you entered, read the terms of service, and select the check box to confirm that you've read the terms of service. \nChoose Complete Purchase. \n We send an email to the registrant for the domain to verify that the registrant contact can be reached at the email address that you specified. (This is an ICANN requirement.) The email comes from one of the following email addresses: \n noreply@registrar.amazon.com – for TLDs registered by Amazon Registrar. \n noreply@domainnameverification.net – for TLDs registered by our registrar associate, Gandi. To determine who the registrar is for your TLD, see Domains That You Can Register with Amazon Route 53. \n IMPORTANT: The registrant contact must follow the instructions in the email to confirm that the email was received, or we must suspend the domain as required by ICANN. When a domain is suspended, it's not accessible on the Internet. \n You'll receive another email when your domain registration has been approved. To determine the current status of your request, see Viewing the Status of a Domain Registration." ], "commands": [], "runbook_refs": [ "R45" ] }, { "id": "R44_2", "name": "Create an S3 Bucket and Configure It to Host a Website (Amazon Route 53)", "type": "RUNBOOK", "status": null, "tasks": [ "To create an S3 bucket and configure it to host a website (Amazon Route 53) : \n Open the Amazon S3 console at https://console.aws.amazon.com/s3/. \nIf a Switch to the old console button appears in the upper-right corner of the S3 console, choose it. \nChoose Create bucket. \nFor Bucket Name, type the name of your domain, such as example.com. \nFor Region, choose the region closest to most of your users. \n Make note of the region that you choose; you'll need this information later in the process. \nChoose Create. \nIn the right pane, expand Permissions. \nChoose Add bucket policy. \nCopy the following bucket policy and paste it into a text editor. This policy grants everyone on the Internet  (\"Principal\":\"*\") permission to get the files (\"Action\":[\"s3:GetObject\"]) in the S3 bucket that is associated with your domain name (\"arn:aws:s3:::your-domain-name/*\"): \n { \"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"AddPerm\",\"Effect\":\"Allow\",\"Principal\":\"*\",\"Action\":[\"s3:GetObject\"],\"Resource\":[\"arn:aws:s3:::your-domain-name/*\"]}]} \nIn the bucket policy, replace the value your-domain-name with the name of your domain, such as example.com. \nChoose Save. \nIn the right pane, expand Static website hosting. \nChoose Enable website hosting. \nFor Index document, type index.html. This is the name that you'll give the HTML file that you'll create later in this process. \nChoose Save." ], "commands": [], "runbook_refs": [ "R46" ] }, { "id": "R44_3", "name": "(Optional): Create Another S3 Bucket, for www.your-domain-name (Amazon Route 53)", "type": "RUNBOOK", "status": null, "tasks": [ "To create an S3 bucket for www.your-domain-name (Amazon Route 53) : \n Choose Create bucket. \nFor Bucket Name, type www.your-domain-name. For example, if you registered the domain name example.com, type www.example.com. \nFor Region, choose the same region that you created the first bucket in. \nChoose Create. \nIn the right pane, expand Static website hosting. \nChoose Redirect all requests to another host name. \nFor Redirect all requests to, type your domain name. \nChoose Save." ], "commands": [], "runbook_refs": [ "R47" ] }, { "id": "R44_4", "name": "Create a Website and Upload It to Your S3 Bucket (Amazon Route 53)", "type": "RUNBOOK", "status": null, "tasks": [ "To create an S3 bucket for www.your-domain-name (Amazon Route 53) : \n Copy the following text and paste it into a text editor: \n <html><head><title>Amazon Route 53 Getting Started</title></head><body><h1>Routing Internet Traffic to an Amazon S3 Bucket for Your Website</h1><p>For more information, see <a href url=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/getting-started.html\">Getting Started with Amazon Route 53</a> in the <emphasis>Amazon Route 53 Developer Guide</emphasis>.</p></body></html> \nSave the file with the file name index.html. \nIn the Amazon S3 console, choose the name of the bucket that you created in the procedure To create an S3 bucket and configure it to host a website. \nChoose Upload. \nChoose Add files. \nFollow the on-screen prompts to select index.html, and then choose Start Upload." ], "commands": [], "runbook_refs": [ "R48" ] }, { "id": "R44_5", "name": "Route DNS Traffic for Your Domain to Your Website Bucket (Amazon Route 53)", "type": "RUNBOOK", "status": null, "tasks": [ "To route traffic to your website (Amazon Route 53) : \n Open the Amazon Route 53 console at https://console.aws.amazon.com/route53/. \nIn the navigation pane, choose Hosted zones. \n NOTE: When you registered your domain, Amazon Route 53 automatically created a hosted zone with the same name. A hosted zone contains information about how you want Amazon Route 53 to route traffic for the domain. \nIn the list of hosted zones, choose the name of your domain. \nChoose Create Record Set. \n NOTE: Each resource record set contains information about how you want to route traffic for one domain (such as example.com) or subdomain (such as www.example.com or test.example.com). Resource record sets are stored in the hosted zone for your domain. \nSpecify the following values: \n Name \n \t For the first resource record set that you'll create, accept the default value, which is the name of your hosted zone and your domain. This will route Internet traffic to the bucket that has the same name as your domain. \n \t If you created a second S3 bucket, for www.your-domain-name, you'll repeat this step to create a second resource record set. For the second resource record set, type www. This will route Internet traffic to the www.your-domain-name bucket. \n Type \n \t Choose A – IPv4 address. \n Alias \n \t Choose Yes. \n Alias Target \n \t Type the name of the region that you created your S3 bucket in. Use the applicable value from the Website Endpoint column in the Amazon Simple Storage Service Website Endpoints table in the AWS Regions and Endpoints chapter of the Amazon Web Services General Reference. \n \t NOTE: You specify the same value for Alias Target for both resource record sets. Amazon Route 53 figures out which bucket to route traffic to based on the name of the resource record set. \n Routing Policy \n \t Accept the default value of Simple. \n Evaluate Target Health \n \t Accept the default value of No. \nChoose Create. \nIf you created a second S3 bucket, for www.your-domain-name, repeat steps 4 through 6 to create a resource record set for www.your-domain-name." ], "commands": [], "runbook_refs": [ "R49" ] }, { "id": "R44_6", "name": "Test Your Website (Amazon Route 53)", "type": "TASKS", "status": null, "tasks": [ "To verify that the website is working correctly, open a web browser and browse to the following URLs: \n http://your-domain-name – Displays the index document in the your-domain-name bucket. \n http://www.your-domain-name – Redirects your request to the your-domain-name bucket." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R45", "name": "Register a domain", "description": "To use a domain name such as example.com, you need to find a domain name that isn't already in use by someone else and register it. When you register a domain name, you reserve it for your exclusive use everywhere on the Internet, typically for one year. By default, we automatically renew your domain name at the end of each year, but you can disable automatic renewal.", "version": "1.1", "createdDate": "2017-07-18T20:49:52.326+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:52.327+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon Route 53", "tools": [ "Route 53 console" ], "action": "Register", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R45_1", "name": "To register a new domain using Amazon Route 53 (Amazon Route 53)", "type": "TASKS", "status": null, "tasks": [ "Sign in to the AWS Management Console and open the Amazon Route 53 console at https://console.aws.amazon.com/route53/.", "If you're new to Amazon Route 53, under Domain Registration, choose Get Started Now. \n If you're already using Amazon Route 53, in the navigation pane, choose Registered Domains.", "Choose Register Domain.", "Enter the domain name that you want to register, and choose Check to find out whether the domain name is available. \n For information about how to specify characters other than a-z, 0-9, and - (hyphen) and how to specify internationalized domain names, see DNS Domain Name Format.", "If the domain is available, choose Add to cart. The domain name appears in your shopping cart. \n The Related domain suggestions list shows other domains that you might want to register instead of your first choice (if it's not available) or in addition to your first choice. Choose Add to cart for each additional domain that you want to register, up to a maximum of five domains. \n If the domain name isn't available and you don't want one of the suggested domain names, repeat step 4 until you find an available domain name that you like. \n NOTE: If you also want your users to be able to use www.your-domain-name, such as www.example.com, to access your sample website, you don't need to register a second domain. Later in this Getting Started topic, we explain how to route traffic for www.your-domain-name to your website.", "In the shopping cart, choose the number of years that you want to register the domain for.", "To register more domains, repeat steps 4 through 6.", "Choose Continue.", "On the Contact Details for Your n Domains page, enter contact information for the domain registrant, administrator, and technical contacts. The values that you enter here are applied to all of the domains that you're registering. \n By default, we use the same information for all three contacts. If you want to enter different information for one or more contacts, change the value of My Registrant, Administrative, and Technical Contacts are all the same to No. \n If you're registering more than one domain, we use the same contact information for all of the domains. \n For more information, see Values that You Specify When You Register a Domain.", "For some top-level domains (TLDs), we're required to collect additional information. For these TLDs, enter the applicable values after the Postal/Zip Code field.", "Choose whether you want to hide your contact information from WHOIS queries. For more information, see the following topics: \n Enabling or Disabling Privacy Protection for Contact Information for a Domain \n Domains That You Can Register with Amazon Route 53", "Choose Continue.", "Review the information that you entered, read the terms of service, and select the check box to confirm that you've read the terms of service.", "Choose Complete Purchase. \n We send an email to the registrant for the domain to verify that the registrant contact can be reached at the email address that you specified. (This is an ICANN requirement.) The email comes from one of the following email addresses: \n noreply@registrar.amazon.com – for TLDs registered by Amazon Registrar. \n noreply@domainnameverification.net – for TLDs registered by our registrar associate, Gandi. To determine who the registrar is for your TLD, see Domains That You Can Register with Amazon Route 53. \n IMPORTANT: The registrant contact must follow the instructions in the email to confirm that the email was received, or we must suspend the domain as required by ICANN. When a domain is suspended, it's not accessible on the Internet. \n You'll receive another email when your domain registration has been approved. To determine the current status of your request, see Viewing the Status of a Domain Registration." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R46", "name": "Create an S3 Bucket and Configure It to Host a Website", "description": "Amazon S3 lets you store and retrieve your data from anywhere on the Internet. To organize your data, you create buckets and upload your data to the buckets by using the AWS Management Console. You can use S3 to host a static website in a bucket. The following procedure explains how to create a bucket and configure it for website hosting.", "version": "1.1", "createdDate": "2017-07-18T20:49:52.559+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:52.559+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon Route 53", "tools": [ "Route 53 console" ], "action": "Create", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R46_1", "name": "To create an S3 bucket and configure it to host a website (Amazon Route 53)", "type": "TASKS", "status": null, "tasks": [ "Open the Amazon S3 console at https://console.aws.amazon.com/s3/.", "If a Switch to the old console button appears in the upper-right corner of the S3 console, choose it.", "Choose Create bucket.", "For Bucket Name, type the name of your domain, such as example.com.", "For Region, choose the region closest to most of your users. \n Make note of the region that you choose; you'll need this information later in the process.", "Choose Create.", "In the right pane, expand Permissions.", "Choose Add bucket policy.", "Copy the following bucket policy and paste it into a text editor. This policy grants everyone on the Internet  (\"Principal\":\"*\") permission to get the files (\"Action\":[\"s3:GetObject\"]) in the S3 bucket that is associated with your domain name (\"arn:aws:s3:::your-domain-name/*\"): \n { \"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"AddPerm\",\"Effect\":\"Allow\",\"Principal\":\"*\",\"Action\":[\"s3:GetObject\"],\"Resource\":[\"arn:aws:s3:::your-domain-name/*\"]}]}", "In the bucket policy, replace the value your-domain-name with the name of your domain, such as example.com.", "Choose Save.", "In the right pane, expand Static website hosting.", "Choose Enable website hosting.", "For Index document, type index.html. This is the name that you'll give the HTML file that you'll create later in this process.", "Choose Save." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R47", "name": "Create Another S3 Bucket", "description": "In the preceding procedure, you created a bucket for your domain name, such as example.com. This allows your users to access your website by using your domain name, such as example.com. \n If you also want your users to be able to use www.your-domain-name, such as www.example.com, to access your sample website, you create a second S3 bucket. You then configure the second bucket to route traffic to the first bucket.", "version": "1.1", "createdDate": "2017-07-18T20:49:52.793+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:52.793+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon Route 53", "tools": [ "Route 53 console" ], "action": "Create", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R47_1", "name": "To create an S3 bucket for www.your-domain-name (Amazon Route 53)", "type": "TASKS", "status": null, "tasks": [ "Choose Create bucket.", "For Bucket Name, type www.your-domain-name. For example, if you registered the domain name example.com, type www.example.com.", "For Region, choose the same region that you created the first bucket in.", "Choose Create.", "In the right pane, expand Static website hosting.", "Choose Redirect all requests to another host name.", "For Redirect all requests to, type your domain name.", "Choose Save." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R48", "name": "Create a Website and Upload It to Your S3 Bucket", "description": "Now that you have an S3 bucket to save your website in, you can create the first page for your website and upload it to (save it in) your bucket.", "version": "1.1", "createdDate": "2017-07-18T20:49:53.024+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:53.024+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon Route 53", "tools": [ "Route 53 console" ], "action": "Create", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R48_1", "name": "To create an S3 bucket for www.your-domain-name (Amazon Route 53)", "type": "TASKS", "status": null, "tasks": [ "Copy the following text and paste it into a text editor: \n <html><head><title>Amazon Route 53 Getting Started</title></head><body><h1>Routing Internet Traffic to an Amazon S3 Bucket for Your Website</h1><p>For more information, see <a href url=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/getting-started.html\">Getting Started with Amazon Route 53</a> in the <emphasis>Amazon Route 53 Developer Guide</emphasis>.</p></body></html>", "Save the file with the file name index.html.", "In the Amazon S3 console, choose the name of the bucket that you created in the procedure To create an S3 bucket and configure it to host a website.", "Choose Upload.", "Choose Add files.", "Follow the on-screen prompts to select index.html, and then choose Start Upload." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R49", "name": "Route DNS Traffic for Your Domain to Your Website Bucket", "description": "You now have a one-page website in your S3 bucket. To start routing Internet traffic for your domain to your S3 bucket, perform the following procedure.", "version": "1.1", "createdDate": "2017-07-18T20:49:53.263+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:53.263+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon Route 53", "tools": [ "Route 53 console" ], "action": "Route", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R49_1", "name": "To route traffic to your website (Amazon Route 53)", "type": "TASKS", "status": null, "tasks": [ "Open the Amazon Route 53 console at https://console.aws.amazon.com/route53/.", "In the navigation pane, choose Hosted zones. \n NOTE: When you registered your domain, Amazon Route 53 automatically created a hosted zone with the same name. A hosted zone contains information about how you want Amazon Route 53 to route traffic for the domain.", "In the list of hosted zones, choose the name of your domain.", "Choose Create Record Set. \n NOTE: Each resource record set contains information about how you want to route traffic for one domain (such as example.com) or subdomain (such as www.example.com or test.example.com). Resource record sets are stored in the hosted zone for your domain.", "Specify the following values: \n Name \n \t For the first resource record set that you'll create, accept the default value, which is the name of your hosted zone and your domain. This will route Internet traffic to the bucket that has the same name as your domain. \n \t If you created a second S3 bucket, for www.your-domain-name, you'll repeat this step to create a second resource record set. For the second resource record set, type www. This will route Internet traffic to the www.your-domain-name bucket. \n Type \n \t Choose A – IPv4 address. \n Alias \n \t Choose Yes. \n Alias Target \n \t Type the name of the region that you created your S3 bucket in. Use the applicable value from the Website Endpoint column in the Amazon Simple Storage Service Website Endpoints table in the AWS Regions and Endpoints chapter of the Amazon Web Services General Reference. \n \t NOTE: You specify the same value for Alias Target for both resource record sets. Amazon Route 53 figures out which bucket to route traffic to based on the name of the resource record set. \n Routing Policy \n \t Accept the default value of Simple. \n Evaluate Target Health \n \t Accept the default value of No.", "Choose Create.", "If you created a second S3 bucket, for www.your-domain-name, repeat steps 4 through 6 to create a resource record set for www.your-domain-name." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R50", "name": "Test Your Website", "description": "Test Your Website.", "version": "1.1", "createdDate": "2017-07-18T20:49:53.490+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:53.490+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon Route 53", "tools": [ "Route 53 console" ], "action": "Test", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R50_1", "name": "To route traffic to your website (Amazon Route 53)", "type": "TASKS", "status": null, "tasks": [ "To verify that the website is working correctly, open a web browser and browse to the following URLs: \n \t http://your-domain-name – Displays the index document in the your-domain-name bucket \n \t http://www.your-domain-name – Redirects your request to the your-domain-name bucket" ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R51", "name": "Getting Started with Amazon Simple Storage Service", "description": "Amazon Simple Storage Service (Amazon S3) is storage for the Internet. You can use Amazon S3 to store and retrieve any amount of data at any time, from anywhere on the web. You can accomplish these tasks using the AWS Management Console, which is a simple and intuitive web interface. This guide introduces you to Amazon S3 and how to use the AWS Management Console.", "version": "1.1", "createdDate": "2017-07-18T20:49:53.718+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:53.718+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon S3", "tools": [], "action": "Walkthrough", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R51_1", "name": "Sign Up for Amazon S3 (Amazon Simple Storage Service (S3))", "type": "RUNBOOK", "status": null, "tasks": [ "To sign up for Amazon S3 : \n Go to https://aws.amazon.com/s3/ and choose Get started with Amazon S3. \nFollow the on-screen instructions." ], "commands": [], "runbook_refs": [ "R52" ] }, { "id": "R51_2", "name": "Create a Topic (Amazon Simple Storage Service (S3))", "type": "RUNBOOK", "status": null, "tasks": [ "To create an S3 bucket : \n Sign in to the AWS Management Console and open the Amazon S3 console at https://console.aws.amazon.com/s3/. \nChoose Create bucket. \nIn the Bucket name field, type a unique DNS-compliant name for your new bucket. (The example screen shot uses the bucket name admin-created. You cannot use this name because S3 bucket names must be unique.) Create your own bucket name using the follow naming guidelines:\nThe name must be unique across all existing bucket names in Amazon S3.\nAfter you create the bucket you cannot change the name, so choose wisely.\nChoose a bucket name that reflects the objects in the bucket because the bucket name is visible in the URL that points to the objects that you're going to put in your bucket.\nFor information about naming buckets, see Rules for Bucket Naming in the Amazon Simple Storage Service Developer Guide. \nFor Region, choose US West (Oregon) as the region where you want the bucket to reside. \nChoose Create." ], "commands": [], "runbook_refs": [ "R53" ] }, { "id": "R51_3", "name": "Add an Object to a Bucket (Amazon Simple Storage Service (S3))", "type": "RUNBOOK", "status": null, "tasks": [ "To upload an object to a bucket : \n In the Bucket name list, choose the name of the bucket that you want to upload your object to. \nChoose Upload.\nOr you can choose Get started. \nIn the Upload dialog box, choose Add files to choose the file to upload. \nChoose a file to upload, and then choose Open. \nChoose Upload." ], "commands": [], "runbook_refs": [ "R54" ] }, { "id": "R51_4", "name": "View an Object (Amazon Simple Storage Service (S3))", "type": "RUNBOOK", "status": null, "tasks": [ "To download an object from a bucket : \n In the Bucket name list, choose the name of the bucket that you created. \nIn the Name list, select the check box next to the object that you uploaded, and then choose Download on the object overview panel." ], "commands": [], "runbook_refs": [ "R55" ] }, { "id": "R51_5", "name": "Move an Object (Amazon Simple Storage Service (S3))", "type": "RUNBOOK", "status": null, "tasks": [ "To copy an object : \n In the Bucket name list, choose the name of the bucket that you created. \nChoose Create Folder, type favorite-pics for the folder name, and then choose Save. \nIn the Name list, select the check box next to the object that you want to copy, choose More, and then choose Copy. \nIn the Name list, choose the name of the folder favorite-pics. \nChoose More, and then choose Paste. \nChoose Paste." ], "commands": [], "runbook_refs": [ "R56" ] }, { "id": "R51_6", "name": "Delete an Object and Bucket (Amazon Simple Storage Service (S3))", "type": "RUNBOOK", "status": null, "tasks": [ "To delete an object from a bucket : \n In the Bucket name list, choose the name of the bucket that you want to delete an object from. \nIn the Name list, select the check box next to the object that you want to delete, choose More, and then choose Delete. \nIn the Delete objects dialog box, verify that the name of the object you selected for deletion is listed, and then choose Delete.", "To empty a bucket : \n In the Bucket name list, choose the bucket icon next to the name of the bucket that you want to empty and then choose Empty bucket. \nIn the Empty bucket dialog box, type the name of the bucket for confirmation and then choose Confirm.", "To delete a bucket : \n In the Bucket name list, choose the bucket icon next to the name of the bucket that you want to delete and then choose Delete bucket. \nIn the Delete bucket dialog box, type the name of the bucket for delete confirmation and then choose Confirm." ], "commands": [], "runbook_refs": [ "R57" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R52", "name": "Sign Up for Amazon S3", "description": "To use Amazon S3, you need an AWS account. If you don't already have one, you'll be prompted to create one when you sign up for Amazon S3. You will not be charged for Amazon S3 until you use it. For information on Amazon S3 features, pricing, and to see the FAQ, go to the Amazon S3 product page.", "version": "1.1", "createdDate": "2017-07-18T20:49:53.950+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:53.950+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon S3", "tools": [], "action": "Sign Up", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R52_1", "name": "To sign up for Amazon S3", "type": "TASKS", "status": null, "tasks": [ "Go to https://aws.amazon.com/s3/ and choose Get started with Amazon S3.", "Follow the on-screen instructions." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R53", "name": "Create a Bucket", "description": "Now that you've signed up for Amazon S3, you're ready to create a bucket using the AWS Management Console. Every object in Amazon S3 is stored in a bucket. Before you can store data in Amazon S3, you must create a bucket.", "version": "1.1", "createdDate": "2017-07-18T20:49:54.181+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:54.182+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon S3", "tools": [], "action": "Create", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R53_1", "name": "To create an S3 bucket", "type": "TASKS", "status": null, "tasks": [ "Sign in to the AWS Management Console and open the Amazon S3 console at https://console.aws.amazon.com/s3/.", "Choose Create bucket.", "In the Bucket name field, type a unique DNS-compliant name for your new bucket. (The example screen shot uses the bucket name admin-created. You cannot use this name because S3 bucket names must be unique.) Create your own bucket name using the follow naming guidelines:\nThe name must be unique across all existing bucket names in Amazon S3.\nAfter you create the bucket you cannot change the name, so choose wisely.\nChoose a bucket name that reflects the objects in the bucket because the bucket name is visible in the URL that points to the objects that you're going to put in your bucket.\nFor information about naming buckets, see Rules for Bucket Naming in the Amazon Simple Storage Service Developer Guide.", "For Region, choose US West (Oregon) as the region where you want the bucket to reside.", "Choose Create." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R54", "name": "Add an Object to a Bucket", "description": "Now that you've created a bucket, you're ready to add an object to it. An object can be any kind of file: a text file, a photo, a video, and so on.", "version": "1.1", "createdDate": "2017-07-18T20:49:54.410+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:54.410+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon S3", "tools": [], "action": "Add", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R54_1", "name": "To upload an object to a bucket", "type": "TASKS", "status": null, "tasks": [ "In the Bucket name list, choose the name of the bucket that you want to upload your object to.", "Choose Upload.\nOr you can choose Get started.", "In the Upload dialog box, choose Add files to choose the file to upload.", "Choose a file to upload, and then choose Open.", "Choose Upload." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R55", "name": "View an Object", "description": "Now that you've added an object to a bucket, you can view information about your object and download the object to your local computer.", "version": "1.1", "createdDate": "2017-07-18T20:49:54.645+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:54.645+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon S3", "tools": [], "action": "View", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R55_1", "name": "To download an object from a bucket", "type": "TASKS", "status": null, "tasks": [ "In the Bucket name list, choose the name of the bucket that you created.", "In the Name list, select the check box next to the object that you uploaded, and then choose Download on the object overview panel." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R56", "name": "Move an Object", "description": "So far you've added an object to a bucket and downloaded the object. Now we create a folder and copy the object into the folder.", "version": "1.1", "createdDate": "2017-07-18T20:49:54.879+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:54.879+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon S3", "tools": [], "action": "Move", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R56_1", "name": "To copy an object", "type": "TASKS", "status": null, "tasks": [ "In the Bucket name list, choose the name of the bucket that you created.", "Choose Create Folder, type favorite-pics for the folder name, and then choose Save.", "In the Name list, select the check box next to the object that you want to copy, choose More, and then choose Copy.", "In the Name list, choose the name of the folder favorite-pics.", "Choose More, and then choose Paste.", "Choose Paste." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R57", "name": "Delete an Object and Bucket", "description": "If you no longer need to store the object that you uploaded and made a copy of while going through this guide, you should delete the objects to prevent further charges.\nYou can delete the objects individually. Or you can empty a bucket, which deletes all the objects in the bucket without deleting the bucket.\nYou can also delete a bucket and all the objects contained in the bucket. However, if you want to continue to use the same bucket name, don't delete the bucket. We recommend that you empty the bucket and keep it. After a bucket is deleted, the name becomes available to reuse, but the name might not be available for you to reuse for various reasons. For example, it might take some time before the name can be reused and some other account could create a bucket with that name before you do.", "version": "1.1", "createdDate": "2017-07-18T20:49:55.107+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:55.107+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon S3", "tools": [], "action": "Delete", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R57_1", "name": "To delete an object from a bucket", "type": "RUNBOOK", "status": null, "tasks": [ "To delete an object from a bucket : \n In the Bucket name list, choose the name of the bucket that you want to delete an object from. \nIn the Name list, select the check box next to the object that you want to delete, choose More, and then choose Delete. \nIn the Delete objects dialog box, verify that the name of the object you selected for deletion is listed, and then choose Delete." ], "commands": [], "runbook_refs": [ "R58" ] }, { "id": "R57_2", "name": "To empty a bucket", "type": "RUNBOOK", "status": null, "tasks": [ "To empty a bucket : \n In the Bucket name list, choose the bucket icon next to the name of the bucket that you want to empty and then choose Empty bucket. \nIn the Empty bucket dialog box, type the name of the bucket for confirmation and then choose Confirm." ], "commands": [], "runbook_refs": [ "R59" ] }, { "id": "R57_3", "name": "To delete an object from a bucket", "type": "RUNBOOK", "status": null, "tasks": [ "To delete a bucket : \n In the Bucket name list, choose the bucket icon next to the name of the bucket that you want to delete and then choose Delete bucket. \nIn the Delete bucket dialog box, type the name of the bucket for delete confirmation and then choose Confirm." ], "commands": [], "runbook_refs": [ "R60" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R58", "name": "To delete an object from a bucket", "description": "If you no longer need to store the object that you uploaded and made a copy of while going through this guide, you should delete the objects to prevent further charges.\nYou can delete the objects individually. Or you can empty a bucket, which deletes all the objects in the bucket without deleting the bucket.\nYou can also delete a bucket and all the objects contained in the bucket. However, if you want to continue to use the same bucket name, don't delete the bucket. We recommend that you empty the bucket and keep it. After a bucket is deleted, the name becomes available to reuse, but the name might not be available for you to reuse for various reasons. For example, it might take some time before the name can be reused and some other account could create a bucket with that name before you do.", "version": "1.1", "createdDate": "2017-07-18T20:49:55.339+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:55.339+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon S3", "tools": [], "action": "Delete", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R58_1", "name": "To delete an object from a bucket", "type": "TASKS", "status": null, "tasks": [ "In the Bucket name list, choose the name of the bucket that you want to delete an object from.", "In the Name list, select the check box next to the object that you want to delete, choose More, and then choose Delete.", "In the Delete objects dialog box, verify that the name of the object you selected for deletion is listed, and then choose Delete." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R59", "name": "To empty a bucket", "description": "If you no longer need to store the object that you uploaded and made a copy of while going through this guide, you should delete the objects to prevent further charges.\nYou can delete the objects individually. Or you can empty a bucket, which deletes all the objects in the bucket without deleting the bucket.\nYou can also delete a bucket and all the objects contained in the bucket. However, if you want to continue to use the same bucket name, don't delete the bucket. We recommend that you empty the bucket and keep it. After a bucket is deleted, the name becomes available to reuse, but the name might not be available for you to reuse for various reasons. For example, it might take some time before the name can be reused and some other account could create a bucket with that name before you do.", "version": "1.1", "createdDate": "2017-07-18T20:49:55.573+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:55.573+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon S3", "tools": [], "action": "Walkthrough", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R59_1", "name": "To empty a bucket", "type": "TASKS", "status": null, "tasks": [ "In the Bucket name list, choose the bucket icon next to the name of the bucket that you want to empty and then choose Empty bucket.", "In the Empty bucket dialog box, type the name of the bucket for confirmation and then choose Confirm." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R60", "name": "To delete a bucket", "description": "If you no longer need to store the object that you uploaded and made a copy of while going through this guide, you should delete the objects to prevent further charges.\nYou can delete the objects individually. Or you can empty a bucket, which deletes all the objects in the bucket without deleting the bucket.\nYou can also delete a bucket and all the objects contained in the bucket. However, if you want to continue to use the same bucket name, don't delete the bucket. We recommend that you empty the bucket and keep it. After a bucket is deleted, the name becomes available to reuse, but the name might not be available for you to reuse for various reasons. For example, it might take some time before the name can be reused and some other account could create a bucket with that name before you do.", "version": "1.1", "createdDate": "2017-07-18T20:49:55.800+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:55.800+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "Amazon S3", "tools": [], "action": "Delete", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R60_1", "name": "To delete a bucket", "type": "TASKS", "status": null, "tasks": [ "In the Bucket name list, choose the bucket icon next to the name of the bucket that you want to delete and then choose Delete bucket.", "In the Delete bucket dialog box, type the name of the bucket for delete confirmation and then choose Confirm." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R61", "name": "Getting Started with Amazon SNS", "description": "This section contains information for you to understand Amazon SNS concepts and quickly set up and use available tools and interfaces for creating and publishing to topics. To get started with push notification messages, see Amazon SNS Mobile Push Notifications.", "version": "1.1", "createdDate": "2017-07-18T20:49:56.039+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:56.039+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon SNS", "tools": [ "AWS Management Console", "AWS CLI", "AWS Tools for Windows PowerShell", "AWS SDKs", "Amazon SNS Query API" ], "action": "Getting Started", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R61_1", "name": "Create a Topic", "type": "RUNBOOK", "status": null, "tasks": [ "Create a Topic : \n In the Amazon SNS console, click Create topic.The Create topic dialog box appears. \nIn the Topic name box, type a topic name. \nClick Create topic.The new topic appears in the Topics page. \nSelect the new topic and then click the topic ARN.The Topic Details page appears. \nCopy the topic ARN for the next task.arn:aws:sns:us-west-2:111122223333:MyTopic" ], "commands": [], "runbook_refs": [ "R62" ] }, { "id": "R61_2", "name": "Subscribe to a Topic", "type": "RUNBOOK", "status": null, "tasks": [ "After you create your queue, you can send a message to it. The following example demonstrates sending a message to an existing queue : \n From the queue list, select the queue that you've created. \nFrom Queue Actions, select Send a Message.The Send a Message to QueueName dialog box is displayed.The following example shows the Message Group ID and Message Deduplication ID parameters specific to FIFO queues(content - based deduplication is disabled). \nTo send a message to a FIFO queue, type the Message Body, the Message Group ID MyMessageGroupId1234567890, and the Message Deduplication ID MyMessageDeduplicationId1234567890, and then choose Send Message. For more information, see FIFO Queue Logic.Note: he message group ID is always required.However,if content - based deduplication is enabled, the message deduplication ID is optional." ], "commands": [], "runbook_refs": [ "R63" ] }, { "id": "R61_3", "name": "Publish to a Topic", "type": "RUNBOOK", "status": null, "tasks": [ "After you send a message into a queue, you can consume it (retrieve it from the queue). When you request a message from a queue, you can't specify which message to get. Instead, you specify the maximum number of messages (up to 10) that you want to get. : \n From the queue list, select the queue that you have created. \nFrom Queue Actions, select Delete Queue. \nChoose Yes, Delete Queue." ], "commands": [], "runbook_refs": [ "R64" ] }, { "id": "R61_4", "name": "Clean Up", "type": "RUNBOOK", "status": null, "tasks": [ "If you don't use an Amazon SQS queue (and don't foresee using it in the near future), it is a best practice to delete it from Amazon SQS. The following example demonstrates deleting a queue. : \n From the queue list, select the queue that you have created. \nFrom Queue Actions, select Delete Queue. \nChoose Yes, Delete Queue.The queue is deleted." ], "commands": [], "runbook_refs": [ "R65" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R62", "name": "Create a Topic", "description": "Now that you're signed up for Amazon SNS, you're ready to create a topic. A topic is a communication channel to send messages and subscribe to notifications. It provides an access point for publishers and subscribers to communicate with each other. In this section you create a topic named MyTopic.", "version": "1.1", "createdDate": "2017-07-18T20:49:56.271+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:56.271+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon SNS", "tools": [ "AWS Management Console", "AWS CLI", "AWS Tools for Windows PowerShell", "AWS SDKs", "Amazon SNS Query API" ], "action": "Create", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R62_1", "name": "Create a Topic", "type": "TASKS", "status": null, "tasks": [ "In the Amazon SNS console, click Create topic.The Create topic dialog box appears.", "In the Topic name box, type a topic name.", "Click Create topic.The new topic appears in the Topics page.", "Select the new topic and then click the topic ARN.The Topic Details page appears.", "Copy the topic ARN for the next task.arn:aws:sns:us-west-2:111122223333:MyTopic" ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R63", "name": "Subscribe to a Topic", "description": "To receive messages published to a topic, you have to subscribe an endpoint to that topic. An endpoint is a mobile app, web server, email address, or an Amazon SQS queue that can receive notification messages from Amazon SNS. Once you subscribe an endpoint to a topic and the subscription is confirmed, the endpoint will receive all messages published to that topic.", "version": "1.1", "createdDate": "2017-07-18T20:49:56.499+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:56.499+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon SNS", "tools": [ "AWS Management Console", "AWS CLI", "AWS Tools for Windows PowerShell", "AWS SDKs", "Amazon SNS Query API" ], "action": "Subscribe", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R63_1", "name": "To subscribe to a topic", "type": "TASKS", "status": null, "tasks": [ "Open the Amazon SNS console at https://console.aws.amazon.com/sns/v2/home.", "Click Create subscription.The Create Subscription dialog box appears.", "In the Topic ARN field, paste the topic ARN you created in the previous task, for example: arn:aws:sns:us-west-2:111122223333:MyTopic.", "In the Protocol drop-down box, select Email.", "In the Endpoint box, type an email address you can use to receive the notification.Important tourage Users: Entourage strips out the confirmation URL. Type an email address you can access in a different email application.", "Click Create subscription.", "Go to your email application and open the message from AWS Notifications, and then click the link to confirm your subscription.Your web browser displays a confirmation response from Amazon SNS." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R64", "name": "Receive and Delete a Message", "description": "Publishers send messages to topics. Once a new message is published, Amazon SNS attempts to deliver that message to every endpoint that is subscribed to the topic. In this section you publish a message to the email address you defined in the previous task.", "version": "1.1", "createdDate": "2017-07-18T20:49:56.730+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:56.730+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon SNS", "tools": [ "AWS Management Console", "AWS CLI", "AWS Tools for Windows PowerShell", "AWS SDKs", "Amazon SNS Query API" ], "action": "Receive and Delete", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R64_1", "name": "To publish to a topic", "type": "TASKS", "status": null, "tasks": [ "Open the Amazon SNS console at https://console.aws.amazon.com/sns/v2/home.In the left navigation pane, click Topics and then select the topic you want to publish to.", "Click the Publish to topic button.The Publish a Message page appears.", "In the Subject box, type a subject line for your message.", "In the Message box, type a brief message.", "Click Publish Message.A confirmation dialog box appears.You can now use your email application to open the message from AWS Notifications and read the message." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R65", "name": "Clean Up", "description": "You have created a topic, subscribed to it, and published a message to the topic. Now you clean up your environment by unsubscribing from the topic and then deleting the topic.", "version": "1.1", "createdDate": "2017-07-18T20:49:56.964+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:56.965+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon SNS", "tools": [ "AWS Management Console", "AWS CLI", "AWS Tools for Windows PowerShell", "AWS SDKs", "Amazon SNS Query API" ], "action": "Clean Up", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R65_1", "name": "To unsubscribe from a topic", "type": "RUNBOOK", "status": null, "tasks": [ "To unsubscribe from a topic : \n Open the Amazon SNS console at https://console.aws.amazon.com/sns/v2/home.In the left navigation pane, click Subscriptions.The Subscriptions page opens. \nSelect your subscription in the subscription list. This will be the only listing on the page, unless you created more than one subscription. \nClick the Other actions drop-down list and then click Delete subscription(s).The Delete confirmation dialog box appears. \nClick Delete." ], "commands": [], "runbook_refs": [ "R66" ] }, { "id": "R65_2", "name": "To delete a topic", "type": "RUNBOOK", "status": null, "tasks": [ "To delete a topic : \n In the left navigation pane, click Topics, and then select the topic you want to delete. \nClick the Actions drop-down list and select Delete topics.The Delete confirmation dialog box appears. \nClick Delete.When you delete a topic, you also delete all subscriptions to that topic." ], "commands": [], "runbook_refs": [ "R67" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R66", "name": "To unsubscribe from a topic", "description": "You have created a topic, subscribed to it, and published a message to the topic. Now you clean up your environment by unsubscribing from the topic and then deleting the topic.", "version": "1.1", "createdDate": "2017-07-18T20:49:57.193+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:57.193+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon SNS", "tools": [ "AWS Management Console", "AWS CLI", "AWS Tools for Windows PowerShell", "AWS SDKs", "Amazon SNS Query API" ], "action": "unsubscribe", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R66_1", "name": "To unsubscribe from a topic", "type": "TASKS", "status": null, "tasks": [ "Open the Amazon SNS console at https://console.aws.amazon.com/sns/v2/home.In the left navigation pane, click Subscriptions.The Subscriptions page opens.", "Select your subscription in the subscription list. This will be the only listing on the page, unless you created more than one subscription.", "Click the Other actions drop-down list and then click Delete subscription(s).The Delete confirmation dialog box appears.", "Click Delete." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R67", "name": "To delete a topic", "description": "You have created a topic, subscribed to it, and published a message to the topic. Now you clean up your environment by unsubscribing from the topic and then deleting the topic.", "version": "1.1", "createdDate": "2017-07-18T20:49:57.430+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:57.430+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon SNS", "tools": [ "AWS Management Console", "AWS CLI", "AWS Tools for Windows PowerShell", "AWS SDKs", "Amazon SNS Query API" ], "action": "delete", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R67_1", "name": "To delete a topic", "type": "TASKS", "status": null, "tasks": [ "In the left navigation pane, click Topics, and then select the topic you want to delete.", "Click the Actions drop-down list and select Delete topics.The Delete confirmation dialog box appears.", "Click Delete.When you delete a topic, you also delete all subscriptions to that topic." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R68", "name": "Getting Started with Amazon SQS", "description": "Amazon Simple Storage Service (Amazon S3) is storage for the Internet. You can use Amazon S3 to store and retrieve any amount of data at any time, from anywhere on the web. You can accomplish these tasks using the AWS Management Console, which is a simple and intuitive web interface. This guide introduces you to Amazon S3 and how to use the AWS Management Console.", "version": "1.1", "createdDate": "2017-07-18T20:49:57.662+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:57.662+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [ "Before you begin, complete the steps in Setting Up Amazon SQS." ], "product": "Amazon SQS", "tools": [ "AWS Management Console" ], "action": "Getting Started", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R68_1", "name": "Create a Queue", "type": "RUNBOOK", "status": null, "tasks": [ "Sign in to the AWS Management Console and open the Amazon SQS console at https://console.aws.amazon.com/sqs/. : \n Sign in to the AWS Management Console and open the Amazon SQS console at https://console.aws.amazon.com/sqs/. \nChoose Create New Queue. \nOn the Create New Queue page, ensure that you're in the correct region and then type the Queue Name. \nStandard is selected by default. Choose FIFO. \nTo create your queue with the default parameters, choose Quick-Create Queue.Your new queue is created and selected in the queue list.Note:When you create a queue, it can take a short time for the queue to propagate throughout Amazon SQS. he Queue Type column helps you distinguish standard queues from FIFO queues at a glance.For a FIFO queue, the Content - Based Deduplication column displays whether you have enabled exactly - once processing. our queue 's Name, URL, and ARN are displayed on the Details tab." ], "commands": [], "runbook_refs": [ "R69" ] }, { "id": "R68_2", "name": "Send a Message", "type": "RUNBOOK", "status": null, "tasks": [ "After you create your queue, you can send a message to it. The following example demonstrates sending a message to an existing queue : \n From the queue list, select the queue that you've created. \nFrom Queue Actions, select Send a Message.The Send a Message to QueueName dialog box is displayed.The following example shows the Message Group ID and Message Deduplication ID parameters specific to FIFO queues(content - based deduplication is disabled). \nTo send a message to a FIFO queue, type the Message Body, the Message Group ID MyMessageGroupId1234567890, and the Message Deduplication ID MyMessageDeduplicationId1234567890, and then choose Send Message. For more information, see FIFO Queue Logic.Note: he message group ID is always required.However,if content - based deduplication is enabled, the message deduplication ID is optional." ], "commands": [], "runbook_refs": [ "R70" ] }, { "id": "R68_3", "name": "Receive and Delete a Message", "type": "RUNBOOK", "status": null, "tasks": [ "After you send a message into a queue, you can consume it (retrieve it from the queue). When you request a message from a queue, you can't specify which message to get. Instead, you specify the maximum number of messages (up to 10) that you want to get. : \n From the queue list, select the queue that you have created. \nFrom Queue Actions, select Delete Queue. \nChoose Yes, Delete Queue." ], "commands": [], "runbook_refs": [ "R71" ] }, { "id": "R68_4", "name": "Delete a Queue", "type": "RUNBOOK", "status": null, "tasks": [ "If you don't use an Amazon SQS queue (and don't foresee using it in the near future), it is a best practice to delete it from Amazon SQS. The following example demonstrates deleting a queue. : \n From the queue list, select the queue that you have created. \nFrom Queue Actions, select Delete Queue. \nChoose Yes, Delete Queue.The queue is deleted." ], "commands": [], "runbook_refs": [ "R72" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R69", "name": "Create a Queue", "description": "The first and most common Amazon SQS task is creating queues. The following example demonstrates how to create and configure a queue.", "version": "1.1", "createdDate": "2017-07-18T20:49:57.901+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:57.901+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon SQS", "tools": [ "AWS Management Console" ], "action": "Create", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R69_1", "name": "Sign in to the AWS Management Console and open the Amazon SQS console at https://console.aws.amazon.com/sqs/.", "type": "TASKS", "status": null, "tasks": [ "Sign in to the AWS Management Console and open the Amazon SQS console at https://console.aws.amazon.com/sqs/.", "Choose Create New Queue.", "On the Create New Queue page, ensure that you're in the correct region and then type the Queue Name.", "Standard is selected by default. Choose FIFO.", "To create your queue with the default parameters, choose Quick-Create Queue.Your new queue is created and selected in the queue list.Note:When you create a queue, it can take a short time for the queue to propagate throughout Amazon SQS. he Queue Type column helps you distinguish standard queues from FIFO queues at a glance.For a FIFO queue, the Content - Based Deduplication column displays whether you have enabled exactly - once processing. our queue 's Name, URL, and ARN are displayed on the Details tab." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R70", "name": "Send a Message", "description": "After you create your queue, you can send a message to it. The following example demonstrates sending a message to an existing queue.", "version": "1.1", "createdDate": "2017-07-18T20:49:58.124+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:58.124+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon SQS", "tools": [ "AWS Management Console" ], "action": "Send", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R70_1", "name": "After you create your queue, you can send a message to it. The following example demonstrates sending a message to an existing queue", "type": "TASKS", "status": null, "tasks": [ "From the queue list, select the queue that you've created.", "From Queue Actions, select Send a Message.The Send a Message to QueueName dialog box is displayed.The following example shows the Message Group ID and Message Deduplication ID parameters specific to FIFO queues(content - based deduplication is disabled).", "To send a message to a FIFO queue, type the Message Body, the Message Group ID MyMessageGroupId1234567890, and the Message Deduplication ID MyMessageDeduplicationId1234567890, and then choose Send Message. For more information, see FIFO Queue Logic.Note: he message group ID is always required.However,if content - based deduplication is enabled, the message deduplication ID is optional." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R71", "name": "Receive and Delete a Message", "description": "After you send a message into a queue, you can consume it (retrieve it from the queue). When you request a message from a queue, you can't specify which message to get. Instead, you specify the maximum number of messages (up to 10) that you want to get.", "version": "1.1", "createdDate": "2017-07-18T20:49:58.357+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:58.357+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon SQS", "tools": [ "AWS Management Console" ], "action": "Receive and Delete", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R71_1", "name": "After you send a message into a queue, you can consume it (retrieve it from the queue). When you request a message from a queue, you can't specify which message to get. Instead, you specify the maximum number of messages (up to 10) that you want to get.", "type": "TASKS", "status": null, "tasks": [ "From the queue list, select the queue that you have created.", "From Queue Actions, select Delete Queue.", "Choose Yes, Delete Queue." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R72", "name": "Delete a Queue", "description": "If you don't use an Amazon SQS queue (and don't foresee using it in the near future), it is a best practice to delete it from Amazon SQS. The following example demonstrates deleting a queue.", "version": "1.1", "createdDate": "2017-07-18T20:49:58.582+0530", "createdBy": "Hazarath Reddy", "modifiedDate": "2017-07-18T20:49:58.582+0530", "modifiedBy": "Hazarath Reddy", "status": "ACTIVE", "prerequisites": [], "product": "Amazon SQS", "tools": [ "AWS Management Console" ], "action": "Delete", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R72_1", "name": "If you don't use an Amazon SQS queue (and don't foresee using it in the near future), it is a best practice to delete it from Amazon SQS. The following example demonstrates deleting a queue.", "type": "TASKS", "status": null, "tasks": [ "From the queue list, select the queue that you have created.", "From Queue Actions, select Delete Queue.", "Choose Yes, Delete Queue.The queue is deleted." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R73", "name": "Getting Started", "description": "AWS Lambda is a compute service that lets you run code without provisioning or managing servers. AWS Lambda executes your code only when needed and scales automatically, from a few requests per day to thousands per second. You pay only for the compute time you consume - there is no charge when your code is not running. With AWS Lambda, you can run code for virtually any type of application or backend service - all with zero administration. AWS Lambda runs your code on a high-availability compute infrastructure and performs all of the administration of the compute resources, including server and operating system maintenance, capacity provisioning and automatic scaling, code monitoring and logging. All you need to do is supply your code in one of the languages that AWS Lambda supports (currently Node.js, Java, C# and Python).", "version": "1.1", "createdDate": "2017-07-18T20:49:58.817+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:58.817+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "AWS Lambda", "tools": [ "AWS CLI" ], "action": "Walkthrough", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R73_1", "name": "Set Up an AWS Account and the AWS CLI (AWS Lambda)", "type": "RUNBOOK", "status": null, "tasks": [ "To Create an AWS account (AWS Lambda) : \n Open https://aws.amazon.com/, and then choose Create an AWS Account. \nFollow the online instructions. \n Part of the sign-up procedure involves receiving a phone call and entering a PIN using the phone keypad.", "To create an IAM user for yourself and add the user to an Administrators group (AWS Lambda) : \n Sign in to the IAM console at https://console.aws.amazon.com/iam/. \nIn the navigation pane, choose Users, and then choose Add user. \nFor User name, type a user name, such as Administrator. The name can consist of letters, digits, and the following characters: plus (+), equal (=), comma (,), period (.), at (@), underscore (_), and hyphen (-). The name is not case sensitive and can be a maximum of 64 characters in length. \nSelect the check box next to AWS Management Console access, select Custom password, and then type the new user's password in the text box. You can optionally select Require password reset to force the user to select a new password the next time the user signs in. \nChoose Next: Permissions. \nOn the Set permissions for user page, choose Add user to group. \nChoose Create group. \nIn the Create group dialog box, type the name for the new group. The name can consist of letters, digits, and the following characters: plus (+), equal (=), comma (,), period (.), at (@), underscore (_), and hyphen (-). The name is not case sensitive and can be a maximum of 128 characters in length. \nFor Filter, choose Job function. \nIn the policy list, select the check box for AdministratorAccess. Then choose Create group. \nBack in the list of groups, select the check box for your new group. Choose Refresh if necessary to see the group in the list. \nChoose Next: Review to see the list of group memberships to be added to the new user. When you are ready to proceed, choose Create user.", "To sign in as the new IAM user (AWS Lambda) : \n Sign out of the AWS Management Console. \nUse the following URL format to log in to the console: \n https://aws_account_number.signin.aws.amazon.com/console/ \n The aws_account_number is your AWS account ID without hyphen. For example, if your AWS account ID is 1234-5678-9012, your AWS account number is 123456789012. For information about how to find your account number, see Your AWS Account ID and Its Alias in the IAM User Guide. \nEnter the IAM user name and password that you just created. When you're signed in, the navigation bar displays your_user_name @ your_aws_account_id.", "To set up the AWS CLI (AWS Lambda) : \n Download and configure the AWS CLI. \nAdd a named profile for the administrator user in the AWS CLI config file. You use this profile when executing the AWS CLI commands. \n [profile adminuser] \n aws_access_key_id = adminuser access key ID \n aws_secret_access_key = adminuser secret access key \n region = aws-region \nVerify the setup by entering the following commands at the command prompt. \n Try the help command to verify that the AWS CLI is installed on your computer: \n \t aws help \n Try a Lambda command to verify the user can reach AWS Lambda. This command lists Lambda functions in the account, if any. The AWS CLI uses the adminuser credentials to authenticate the request. \n \t aws lambda list-functions --profile adminuser" ], "commands": [], "runbook_refs": [ "R74" ] }, { "id": "R73_2", "name": "Create a HelloWorld Lambda Function and Explore the Console (AWS Lambda)", "type": "RUNBOOK", "status": null, "tasks": [ "To create a Hello World Lambda function (AWS Lambda) : \n Sign in to the AWS Management Console and open the AWS Lambda console. \nChoose Get Started Now. \n Note: The console shows the Get Started Now page only if you do not have any Lambda functions created. If you have created functions already, you will see the Lambda > Functions page. On the list page, choose Create a Lambda function to go to the Lambda > New function page. \nOn the Select blueprint page, first explore the available blueprints. Then, select a specific blueprint for this Getting Started exercise. \n Review the blueprints. You can also use the Filter to search for specific blueprints. For example: \n \t Enter S3 in Filter to get only the list of blueprints available to process Amazon S3 events. \n \t nter dynamodb in Filter to get a list of available blueprints to process Amazon DynamoDB events. \n For this Getting Started exercise, enter hello-world-python in Filter, and then choose the hello-world-python blueprint. \nOn the Configure triggers page, you can optionally choose a service that automatically triggers your Lambda function by choosing the gray box with ellipses (...) to display a list of available services. \n Depending on which service you select, you are prompted to provide relevant information for that service. For example, if you select DynamoDB, you need to provide the following: \n \t The name of the DynamoDB table \n \t Batch size \n \t Starting position \n For this Getting Started exercise, do not configure a trigger and choose Next. \nOn the Configure function page, do the following: \n [a] Review the preconfigured Lambda function configuration information, including: \n \t Runtime is Python 2.7. \n \t Code authored in Python is provided. It reads incoming event data and logs some of the information to CloudWatch. \n \t Handler shows lambda_function.lambda_handler value. It is the filename.handler-function. The console saves the sample code in the lambda_function.py file and in the code lambda_handler is the function name that receives the event as a parameter when the Lambda function is invoked. For more information, see Lambda Function Handler (Python).\n [b] Enter the function name hello-world-python in Name.\n [c] In the Lambda Function Code section, do the following: \n[1] Review the sample code. Note that:\n \t the console saves this code as lambda_handler.py. The console then zips the file, and uploads it to AWS Lambda creating your Lambda function.\n \t The sample code processes incoming events of the following form: {\"key3\": \"value3\",\"key2\": \"value2\",\"key1\": \"value1\"} \n After creating the Lambda function, you invoke it using sample events of this form in the next section.\n [d]In the Lambda function handler and role section, do the following:\n[1]Note the Handler* value. It is of the form python-file-name.handler-function.\n[2]In Role*, choose Create new role from template(s).\n[3]In Role name, type a name for the role.\n[4]In Role templates, Lambda provides a list of optional templates that, should you select one, automatically creates the role with the requisite permissions attached to that policy. For a list of the Policy templates, see Policy Templates. For the purpose of this tutorial, you can leave this field blank because your Lambda function already has the basic execution permission it needs.\n Note: Optionally, you could select Choose an existing role if you already have a role created with specific permissions beyond basic execution. You can also select Create a custom role. When you choose this option, a window appears where you can edit the permissions policy inline. \n[e]In the Advanced settings section, leave the default Lambda function configuration values.\n The memory and timeout values are sufficient for the Lambda function you are creating. These configurations influence the performance of your code. For more information, see Lambda Functions. \n [f]Choose Next. \n [g]Choose Create Function to create a Lambda function. \n The console saves the code into a file and then zips the file, which is the deployment package. The console then uploads the deployment package to AWS Lambda creating your Lambda function. The console shows the hello-world-python Lambda function, you can now perform various action including test the function", "Invoke the Lambda Function Manually and Verify Results, Logs, and Metrics (AWS Lambda) : \n On the Lambda > Functions > HelloWorld page, choose Test. \nIn the Input test event page, choose Hello World from the Sample event template list. The following sample event template appears in the window. \n {\"key3\": \"value3\",\"key2\": \"value2\",\"key1\": \"value1\"} \n You can change key and values in the sample JSON, but don't change the event structure. If you do change any keys and values, you must update the sample code accordingly. Choose Save and test. \nAWS Lambda executes your function on your behalf. The handler in your Lambda function receives and then processes the sample event. \nUpon successful execution, view results in the console. \n Note the following:\n \t The Execution result section shows the execution status as succeeded and also shows the function execution results, returned by the return statement.\n \t Note:The console always uses the RequestResponse invocation type (synchronous invocation) when invoking a Lambda function which causes AWS Lambda to return a response immediately. For more information, see Invocation Types.\n The Summary section shows the key information reported in the Log output section (the REPORT line in the execution log).\n The Log output section shows the log AWS Lambda generates for each execution. These are the logs written to CloudWatch by the Lambda function. The AWS Lambda console shows these logs for your convenience. \n Note that the Click here link shows logs in the CloudWatch console. The function then adds logs to Amazon CloudWatch in the log group that corresponds to the Lambda function. \nRun the Lambda function a few times to gather some metrics that you can view in the next step. \nChoose the Monitoring tab to view the CloudWatch metrics for your Lambda function. This page shows four CloudWatch metrics. \nNote the following:\n The X-axis shows the past 24 hours from the current time (for example, 2:00 pm as shown in the screen shot).\n Invocation count shows the number of invocations during this interval.\n Invocation duration shows how long it took for your Lambda function to run. It shows minimum, maximum, and average time of execution.\n Invocation errors show the number of times your Lambda function failed. You can compare the number of times your function executed and how many times it failed (if any).\n Throttled invocation metrics show whether AWS Lambda throttled your Lambda function invocation. For more information, see List of AWS Lambda Limits.\n The AWS Lambda console shows these CloudWatch metrics for your convenience. You can see these metrics in the Amazon CloudWatch console by clicking any of these metrics.", "Create a Lambda Function Authored in Java (AWS Lambda) : \n The blueprints provide sample code authored either in Python or Node.js. You can easily modify the example using the inline editor in the console. However, if you want to author code for your Lambda function in Java, there are no blueprints provided. Also, there is no inline editor for you to write Java code in the AWS Lambda console.\n That means, you must write your Java code and also create your deployment package outside the console. After you create the deployment package, you can use the console to upload the package to AWS Lambda to create your Lambda function. You can also use the console to test the function by manually invoking it.\n In this section you create a Lambda function using the following Java code example.\n\n \n package example;\n import com.amazonaws.services.lambda.runtime.Context; \n import com.amazonaws.services.lambda.runtime.LambdaLogger;\n public class Hello {\n    public String myHandler(int myCount, Context context) {\n        LambdaLogger logger = context.getLogger();\n        logger.log(\"received : \" + myCount);\n        return String.valueOf(myCount);\n    }\n } \n\n First, you need to package this code and any dependencies into a deployment package. Then, you can use the Getting Started exercise to upload the package to create your Lambda function and test using the console." ], "commands": [], "runbook_refs": [ "R75" ] }, { "id": "R73_3", "name": "Create a Simple Microservice using Lambda and API Gateway (AWS Lambda)", "type": "RUNBOOK", "status": null, "tasks": [ "Create an API Using Amazon API Gateway (AWS Lambda) : \n Sign in to the AWS Management Console and open the AWS Lambda console. \nChoose Create Lambda function. \nOn the Select blueprint page, choose the microservice-http-endpoint blueprint. You can use the Filter to find it. \nThe Configure triggers page will be populated with an API Gateway trigger. The default API name that will be created is LambdaMicroservice (You can change this name via the API Name field if you wish). \n Note: When you complete the wizard and create your function, Lambda automatically creates a proxy resource named MyLambdaMicroservice (your function name) under the API name you selected. For more information about proxy resources, see Configure Proxy Integration for a Proxy Resource. A proxy resource has an AWS_PROXY integration type and a catch-all method ANY. The AWS_PROXY integration type applies a default mapping template to pass through the entire request to the Lambda function and transforms the output from the Lambda function to HTTP responses. The ANY method defines the same integration setup for all the supported methods, including GET, POST, PATCH, DELETE and others.\n After reviewing your trigger, choose Next. \nOn the Configure function page, do the following: \n[a]Review the preconfigured Lambda function configuration information, including:\n\tRuntime is Node.js 6.10\n\tCode authored in JavaScript is provided. The code performs DynamoDB operations based on the method called and payload provided.\n\tHandler shows index.handler. The format is: filename.handler-function\n[b]Enter the function name MyLambdaMicroservice in Name.\n[c]In Role, enter a role name for the new role that will be created.\n Note: The microservice-http-endpoint blueprint pre-populates the Simple Microservice permission policy template in the Policy templates field, to be added to your new role upon creation. This automatically adds the requisite permissions attached to that policy to your new role. For more information, see Policy Templates. \nChoose Create function.", "Create an API Using Amazon API Gateway (AWS Lambda) : \n With your MyLambdaMicroService function still open in the console, choose the Actions tab and then choose Configure test event. \nReplace the existing text with the following:\n{\n\"httpMethod\":\"GET\",\n\"queryStringParameters\":{\n\"TableName\":\"MyTable\"\n}\n}" ], "commands": [], "runbook_refs": [ "R76" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R74", "name": "Set Up an AWS Account and the AWS CLI", "description": "If you have not already done so, you need to sign up for an AWS account and create an administrator user in the account. You also need to set up the AWS Command Line Interface (AWS CLI). Many of the tutorials use the AWS CLI.", "version": "1.1", "createdDate": "2017-07-18T20:49:59.052+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:59.052+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "AWS Lambda", "tools": [ "AWS CLI" ], "action": "Set Up", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R74_1", "name": " Set Up an AWS Account and Create an Administrator User (AWS Lambda)", "type": "RUNBOOK", "status": null, "tasks": [ "To Create an AWS account (AWS Lambda) : \n Open https://aws.amazon.com/, and then choose Create an AWS Account. \nFollow the online instructions. \n Part of the sign-up procedure involves receiving a phone call and entering a PIN using the phone keypad.", "To create an IAM user for yourself and add the user to an Administrators group (AWS Lambda) : \n Sign in to the IAM console at https://console.aws.amazon.com/iam/. \nIn the navigation pane, choose Users, and then choose Add user. \nFor User name, type a user name, such as Administrator. The name can consist of letters, digits, and the following characters: plus (+), equal (=), comma (,), period (.), at (@), underscore (_), and hyphen (-). The name is not case sensitive and can be a maximum of 64 characters in length. \nSelect the check box next to AWS Management Console access, select Custom password, and then type the new user's password in the text box. You can optionally select Require password reset to force the user to select a new password the next time the user signs in. \nChoose Next: Permissions. \nOn the Set permissions for user page, choose Add user to group. \nChoose Create group. \nIn the Create group dialog box, type the name for the new group. The name can consist of letters, digits, and the following characters: plus (+), equal (=), comma (,), period (.), at (@), underscore (_), and hyphen (-). The name is not case sensitive and can be a maximum of 128 characters in length. \nFor Filter, choose Job function. \nIn the policy list, select the check box for AdministratorAccess. Then choose Create group. \nBack in the list of groups, select the check box for your new group. Choose Refresh if necessary to see the group in the list. \nChoose Next: Review to see the list of group memberships to be added to the new user. When you are ready to proceed, choose Create user.", "To sign in as the new IAM user (AWS Lambda) : \n Sign out of the AWS Management Console. \nUse the following URL format to log in to the console: \n https://aws_account_number.signin.aws.amazon.com/console/ \n The aws_account_number is your AWS account ID without hyphen. For example, if your AWS account ID is 1234-5678-9012, your AWS account number is 123456789012. For information about how to find your account number, see Your AWS Account ID and Its Alias in the IAM User Guide. \nEnter the IAM user name and password that you just created. When you're signed in, the navigation bar displays your_user_name @ your_aws_account_id." ], "commands": [], "runbook_refs": [ "R75" ] }, { "id": "R74_2", "name": "Set Up the AWS Command Line Interface (AWS Lambda)", "type": "RUNBOOK", "status": null, "tasks": [ "To set up the AWS CLI (AWS Lambda) : \n Download and configure the AWS CLI. \nAdd a named profile for the administrator user in the AWS CLI config file. You use this profile when executing the AWS CLI commands. \n [profile adminuser] \n aws_access_key_id = adminuser access key ID \n aws_secret_access_key = adminuser secret access key \n region = aws-region \nVerify the setup by entering the following commands at the command prompt. \n Try the help command to verify that the AWS CLI is installed on your computer: \n \t aws help \n Try a Lambda command to verify the user can reach AWS Lambda. This command lists Lambda functions in the account, if any. The AWS CLI uses the adminuser credentials to authenticate the request. \n \t aws lambda list-functions --profile adminuser" ], "commands": [], "runbook_refs": [ "R76" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R75", "name": "Set Up an AWS Account and Create an Administrator User", "description": "Before you use AWS Lambda for the first time, complete the following tasks: \n Sign up for AWS \n Create an IAM User.", "version": "1.1", "createdDate": "2017-07-18T20:49:59.281+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:59.282+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "AWS Lambda", "tools": [ "AWS CLI" ], "action": "Set Up and Create", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R75_1", "name": " Sign up for AWS (AWS Lambda)", "type": "RUNBOOK", "status": null, "tasks": [ "To Create an AWS account (AWS Lambda) : \n Open https://aws.amazon.com/, and then choose Create an AWS Account. \nFollow the online instructions. \n Part of the sign-up procedure involves receiving a phone call and entering a PIN using the phone keypad." ], "commands": [], "runbook_refs": [ "R76" ] }, { "id": "R75_2", "name": "Create an IAM User (AWS Lambda)", "type": "RUNBOOK", "status": null, "tasks": [ "To create an IAM user for yourself and add the user to an Administrators group (AWS Lambda) : \n Sign in to the IAM console at https://console.aws.amazon.com/iam/. \nIn the navigation pane, choose Users, and then choose Add user. \nFor User name, type a user name, such as Administrator. The name can consist of letters, digits, and the following characters: plus (+), equal (=), comma (,), period (.), at (@), underscore (_), and hyphen (-). The name is not case sensitive and can be a maximum of 64 characters in length. \nSelect the check box next to AWS Management Console access, select Custom password, and then type the new user's password in the text box. You can optionally select Require password reset to force the user to select a new password the next time the user signs in. \nChoose Next: Permissions. \nOn the Set permissions for user page, choose Add user to group. \nChoose Create group. \nIn the Create group dialog box, type the name for the new group. The name can consist of letters, digits, and the following characters: plus (+), equal (=), comma (,), period (.), at (@), underscore (_), and hyphen (-). The name is not case sensitive and can be a maximum of 128 characters in length. \nFor Filter, choose Job function. \nIn the policy list, select the check box for AdministratorAccess. Then choose Create group. \nBack in the list of groups, select the check box for your new group. Choose Refresh if necessary to see the group in the list. \nChoose Next: Review to see the list of group memberships to be added to the new user. When you are ready to proceed, choose Create user.", "To sign in as the new IAM user (AWS Lambda) : \n Sign out of the AWS Management Console. \nUse the following URL format to log in to the console: \n https://aws_account_number.signin.aws.amazon.com/console/ \n The aws_account_number is your AWS account ID without hyphen. For example, if your AWS account ID is 1234-5678-9012, your AWS account number is 123456789012. For information about how to find your account number, see Your AWS Account ID and Its Alias in the IAM User Guide. \nEnter the IAM user name and password that you just created. When you're signed in, the navigation bar displays your_user_name @ your_aws_account_id." ], "commands": [], "runbook_refs": [ "R77" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R76", "name": "Sign up for AWS", "description": "When you sign up for Amazon Web Services (AWS), your AWS account is automatically signed up for all services in AWS, including AWS Lambda. You are charged only for the services that you use. \n With AWS Lambda, you pay only for the resources you use. For more information about AWS Lambda usage rates, see the AWS Lambda product page. If you are a new AWS customer, you can get started with AWS Lambda for free. For more information, see AWS Free Usage Tier.", "version": "1.1", "createdDate": "2017-07-18T20:49:59.512+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:59.512+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "AWS Lambda", "tools": [ "AWS CLI" ], "action": "Sign up", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R76_1", "name": "To Create an AWS account (AWS Lambda)", "type": "TASKS", "status": null, "tasks": [ "Open https://aws.amazon.com/, and then choose Create an AWS Account.", "Follow the online instructions. \n Part of the sign-up procedure involves receiving a phone call and entering a PIN using the phone keypad." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R77", "name": "Create an IAM User", "description": "Services in AWS, such as AWS Lambda, require that you provide credentials when you access them, so that the service can determine whether you have permissions to access the resources owned by that service. The console requires your password. You can create access keys for your AWS account to access the AWS CLI or API. However, we don't recommend that you access AWS using the credentials for your AWS account. Instead, we recommend that you use AWS Identity and Access Management (IAM). Create an IAM user, add the user to an IAM group with administrative permissions, and then grant administrative permissions to the IAM user that you created. You can then access AWS using a special URL and that IAM user's credentials. \n If you signed up for AWS, but you haven't created an IAM user for yourself, you can create one using the IAM console. \n The Getting Started exercises and tutorials in this guide assume you have a user (adminuser) with administrator privileges. When you follow the procedure, create a user with name adminuser.", "version": "1.1", "createdDate": "2017-07-18T20:49:59.750+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:59.750+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "AWS Lambda", "tools": [ "AWS CLI" ], "action": "Create", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R77_1", "name": "To create an IAM user for yourself and add the user to an Administrators group (AWS Lambda)", "type": "TASKS", "status": null, "tasks": [ "Sign in to the IAM console at https://console.aws.amazon.com/iam/.", "In the navigation pane, choose Users, and then choose Add user.", "For User name, type a user name, such as Administrator. The name can consist of letters, digits, and the following characters: plus (+), equal (=), comma (,), period (.), at (@), underscore (_), and hyphen (-). The name is not case sensitive and can be a maximum of 64 characters in length.", "Select the check box next to AWS Management Console access, select Custom password, and then type the new user's password in the text box. You can optionally select Require password reset to force the user to select a new password the next time the user signs in.", "Choose Next: Permissions.", "On the Set permissions for user page, choose Add user to group.", "Choose Create group.", "In the Create group dialog box, type the name for the new group. The name can consist of letters, digits, and the following characters: plus (+), equal (=), comma (,), period (.), at (@), underscore (_), and hyphen (-). The name is not case sensitive and can be a maximum of 128 characters in length.", "For Filter, choose Job function.", "In the policy list, select the check box for AdministratorAccess. Then choose Create group.", "Back in the list of groups, select the check box for your new group. Choose Refresh if necessary to see the group in the list.", "Choose Next: Review to see the list of group memberships to be added to the new user. When you are ready to proceed, choose Create user." ], "commands": [], "runbook_refs": [] }, { "id": "R77_2", "name": "To sign in as the new IAM user (AWS Lambda)", "type": "TASKS", "status": null, "tasks": [ "Sign out of the AWS Management Console.", "Use the following URL format to log in to the console: \n https://aws_account_number.signin.aws.amazon.com/console/ \n The aws_account_number is your AWS account ID without hyphen. For example, if your AWS account ID is 1234-5678-9012, your AWS account number is 123456789012. For information about how to find your account number, see Your AWS Account ID and Its Alias in the IAM User Guide.", "Enter the IAM user name and password that you just created. When you're signed in, the navigation bar displays your_user_name @ your_aws_account_id." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R78", "name": "Set Up the AWS Command Line Interface", "description": "All the exercises in this guide assume that you are using administrator user credentials (adminuser) in your account to perform the operations. For instructions on creating an administrator user in your AWS account, see Step 1.1: Set Up an AWS Account and Create an Administrator User, and then follow the steps to download and configure the AWS Command Line Interface (AWS CLI).", "version": "1.1", "createdDate": "2017-07-18T20:49:59.974+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:49:59.974+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "AWS Lambda", "tools": [ "AWS CLI" ], "action": "Set up", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R78_1", "name": "To set up the AWS CLI (AWS Lambda)", "type": "TASKS", "status": null, "tasks": [ "Download and configure the AWS CLI.", "Add a named profile for the administrator user in the AWS CLI config file. You use this profile when executing the AWS CLI commands. \n [profile adminuser] \n aws_access_key_id = adminuser access key ID \n aws_secret_access_key = adminuser secret access key \n region = aws-region", "Verify the setup by entering the following commands at the command prompt. \n Try the help command to verify that the AWS CLI is installed on your computer: \n \t aws help \n Try a Lambda command to verify the user can reach AWS Lambda. This command lists Lambda functions in the account, if any. The AWS CLI uses the adminuser credentials to authenticate the request. \n \t aws lambda list-functions --profile adminuser" ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R79", "name": "Create a HelloWorld Lambda Function and Explore the Console", "description": "In this Getting Started exercise you first create a Hello World Lambda function using the AWS Lambda console. Next, you manually invoke the Lambda function using sample event data. AWS Lambda executes the Lambda function and returns results. You then verify execution results, including the logs that your Lambda function created and various CloudWatch metrics.", "version": "1.1", "createdDate": "2017-07-18T20:50:00.208+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:50:00.208+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "AWS Lambda", "tools": [ "AWS CLI" ], "action": "Create", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R79_1", "name": "Create a Hello World Lambda Function (AWS Lambda)", "type": "RUNBOOK", "status": null, "tasks": [ "To create a Hello World Lambda function (AWS Lambda) : \n Sign in to the AWS Management Console and open the AWS Lambda console. \nChoose Get Started Now. \n Note: The console shows the Get Started Now page only if you do not have any Lambda functions created. If you have created functions already, you will see the Lambda > Functions page. On the list page, choose Create a Lambda function to go to the Lambda > New function page. \nOn the Select blueprint page, first explore the available blueprints. Then, select a specific blueprint for this Getting Started exercise. \n Review the blueprints. You can also use the Filter to search for specific blueprints. For example: \n \t Enter S3 in Filter to get only the list of blueprints available to process Amazon S3 events. \n \t nter dynamodb in Filter to get a list of available blueprints to process Amazon DynamoDB events. \n For this Getting Started exercise, enter hello-world-python in Filter, and then choose the hello-world-python blueprint. \nOn the Configure triggers page, you can optionally choose a service that automatically triggers your Lambda function by choosing the gray box with ellipses (...) to display a list of available services. \n Depending on which service you select, you are prompted to provide relevant information for that service. For example, if you select DynamoDB, you need to provide the following: \n \t The name of the DynamoDB table \n \t Batch size \n \t Starting position \n For this Getting Started exercise, do not configure a trigger and choose Next. \nOn the Configure function page, do the following: \n [a] Review the preconfigured Lambda function configuration information, including: \n \t Runtime is Python 2.7. \n \t Code authored in Python is provided. It reads incoming event data and logs some of the information to CloudWatch. \n \t Handler shows lambda_function.lambda_handler value. It is the filename.handler-function. The console saves the sample code in the lambda_function.py file and in the code lambda_handler is the function name that receives the event as a parameter when the Lambda function is invoked. For more information, see Lambda Function Handler (Python).\n [b] Enter the function name hello-world-python in Name.\n [c] In the Lambda Function Code section, do the following: \n[1] Review the sample code. Note that:\n \t the console saves this code as lambda_handler.py. The console then zips the file, and uploads it to AWS Lambda creating your Lambda function.\n \t The sample code processes incoming events of the following form: {\"key3\": \"value3\",\"key2\": \"value2\",\"key1\": \"value1\"} \n After creating the Lambda function, you invoke it using sample events of this form in the next section.\n [d]In the Lambda function handler and role section, do the following:\n[1]Note the Handler* value. It is of the form python-file-name.handler-function.\n[2]In Role*, choose Create new role from template(s).\n[3]In Role name, type a name for the role.\n[4]In Role templates, Lambda provides a list of optional templates that, should you select one, automatically creates the role with the requisite permissions attached to that policy. For a list of the Policy templates, see Policy Templates. For the purpose of this tutorial, you can leave this field blank because your Lambda function already has the basic execution permission it needs.\n Note: Optionally, you could select Choose an existing role if you already have a role created with specific permissions beyond basic execution. You can also select Create a custom role. When you choose this option, a window appears where you can edit the permissions policy inline. \n[e]In the Advanced settings section, leave the default Lambda function configuration values.\n The memory and timeout values are sufficient for the Lambda function you are creating. These configurations influence the performance of your code. For more information, see Lambda Functions. \n [f]Choose Next. \n [g]Choose Create Function to create a Lambda function. \n The console saves the code into a file and then zips the file, which is the deployment package. The console then uploads the deployment package to AWS Lambda creating your Lambda function. The console shows the hello-world-python Lambda function, you can now perform various action including test the function" ], "commands": [], "runbook_refs": [ "R80" ] }, { "id": "R79_2", "name": "Invoke the Lambda Function (AWS Lambda)", "type": "RUNBOOK", "status": null, "tasks": [ "Invoke the Lambda Function Manually and Verify Results, Logs, and Metrics (AWS Lambda) : \n On the Lambda > Functions > HelloWorld page, choose Test. \nIn the Input test event page, choose Hello World from the Sample event template list. The following sample event template appears in the window. \n {\"key3\": \"value3\",\"key2\": \"value2\",\"key1\": \"value1\"} \n You can change key and values in the sample JSON, but don't change the event structure. If you do change any keys and values, you must update the sample code accordingly. Choose Save and test. \nAWS Lambda executes your function on your behalf. The handler in your Lambda function receives and then processes the sample event. \nUpon successful execution, view results in the console. \n Note the following:\n \t The Execution result section shows the execution status as succeeded and also shows the function execution results, returned by the return statement.\n \t Note:The console always uses the RequestResponse invocation type (synchronous invocation) when invoking a Lambda function which causes AWS Lambda to return a response immediately. For more information, see Invocation Types.\n The Summary section shows the key information reported in the Log output section (the REPORT line in the execution log).\n The Log output section shows the log AWS Lambda generates for each execution. These are the logs written to CloudWatch by the Lambda function. The AWS Lambda console shows these logs for your convenience. \n Note that the Click here link shows logs in the CloudWatch console. The function then adds logs to Amazon CloudWatch in the log group that corresponds to the Lambda function. \nRun the Lambda function a few times to gather some metrics that you can view in the next step. \nChoose the Monitoring tab to view the CloudWatch metrics for your Lambda function. This page shows four CloudWatch metrics. \nNote the following:\n The X-axis shows the past 24 hours from the current time (for example, 2:00 pm as shown in the screen shot).\n Invocation count shows the number of invocations during this interval.\n Invocation duration shows how long it took for your Lambda function to run. It shows minimum, maximum, and average time of execution.\n Invocation errors show the number of times your Lambda function failed. You can compare the number of times your function executed and how many times it failed (if any).\n Throttled invocation metrics show whether AWS Lambda throttled your Lambda function invocation. For more information, see List of AWS Lambda Limits.\n The AWS Lambda console shows these CloudWatch metrics for your convenience. You can see these metrics in the Amazon CloudWatch console by clicking any of these metrics." ], "commands": [], "runbook_refs": [ "R81" ] }, { "id": "R79_3", "name": "(Optional) Create a Lambda Function Authored in Java (AWS Lambda)", "type": "RUNBOOK", "status": null, "tasks": [ "Create a Lambda Function Authored in Java (AWS Lambda) : \n The blueprints provide sample code authored either in Python or Node.js. You can easily modify the example using the inline editor in the console. However, if you want to author code for your Lambda function in Java, there are no blueprints provided. Also, there is no inline editor for you to write Java code in the AWS Lambda console.\n That means, you must write your Java code and also create your deployment package outside the console. After you create the deployment package, you can use the console to upload the package to AWS Lambda to create your Lambda function. You can also use the console to test the function by manually invoking it.\n In this section you create a Lambda function using the following Java code example.\n\n \n package example;\n import com.amazonaws.services.lambda.runtime.Context; \n import com.amazonaws.services.lambda.runtime.LambdaLogger;\n public class Hello {\n    public String myHandler(int myCount, Context context) {\n        LambdaLogger logger = context.getLogger();\n        logger.log(\"received : \" + myCount);\n        return String.valueOf(myCount);\n    }\n } \n\n First, you need to package this code and any dependencies into a deployment package. Then, you can use the Getting Started exercise to upload the package to create your Lambda function and test using the console." ], "commands": [], "runbook_refs": [ "R82" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R80", "name": "Create a Hello World Lambda Function", "description": "Follow the steps in this section to create a Hello World Lambda function. In this step, you will do the following: \n Select a Blueprint. \n Configure function.", "version": "1.1", "createdDate": "2017-07-18T20:50:00.453+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:50:00.453+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "AWS Lambda", "tools": [ "AWS CLI" ], "action": "Create", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R80_1", "name": "To create a Hello World Lambda function (AWS Lambda)", "type": "TASKS", "status": null, "tasks": [ "Sign in to the AWS Management Console and open the AWS Lambda console.", "Choose Get Started Now. \n Note: The console shows the Get Started Now page only if you do not have any Lambda functions created. If you have created functions already, you will see the Lambda > Functions page. On the list page, choose Create a Lambda function to go to the Lambda > New function page.", "On the Select blueprint page, first explore the available blueprints. Then, select a specific blueprint for this Getting Started exercise. \n Review the blueprints. You can also use the Filter to search for specific blueprints. For example: \n \t Enter S3 in Filter to get only the list of blueprints available to process Amazon S3 events. \n \t nter dynamodb in Filter to get a list of available blueprints to process Amazon DynamoDB events. \n For this Getting Started exercise, enter hello-world-python in Filter, and then choose the hello-world-python blueprint.", "On the Configure triggers page, you can optionally choose a service that automatically triggers your Lambda function by choosing the gray box with ellipses (...) to display a list of available services. \n Depending on which service you select, you are prompted to provide relevant information for that service. For example, if you select DynamoDB, you need to provide the following: \n \t The name of the DynamoDB table \n \t Batch size \n \t Starting position \n For this Getting Started exercise, do not configure a trigger and choose Next.", "On the Configure function page, do the following: \n [a] Review the preconfigured Lambda function configuration information, including: \n \t Runtime is Python 2.7. \n \t Code authored in Python is provided. It reads incoming event data and logs some of the information to CloudWatch. \n \t Handler shows lambda_function.lambda_handler value. It is the filename.handler-function. The console saves the sample code in the lambda_function.py file and in the code lambda_handler is the function name that receives the event as a parameter when the Lambda function is invoked. For more information, see Lambda Function Handler (Python).\n [b] Enter the function name hello-world-python in Name.\n [c] In the Lambda Function Code section, do the following: \n[1] Review the sample code. Note that:\n \t the console saves this code as lambda_handler.py. The console then zips the file, and uploads it to AWS Lambda creating your Lambda function.\n \t The sample code processes incoming events of the following form: {\"key3\": \"value3\",\"key2\": \"value2\",\"key1\": \"value1\"} \n After creating the Lambda function, you invoke it using sample events of this form in the next section.\n [d]In the Lambda function handler and role section, do the following:\n[1]Note the Handler* value. It is of the form python-file-name.handler-function.\n[2]In Role*, choose Create new role from template(s).\n[3]In Role name, type a name for the role.\n[4]In Role templates, Lambda provides a list of optional templates that, should you select one, automatically creates the role with the requisite permissions attached to that policy. For a list of the Policy templates, see Policy Templates. For the purpose of this tutorial, you can leave this field blank because your Lambda function already has the basic execution permission it needs.\n Note: Optionally, you could select Choose an existing role if you already have a role created with specific permissions beyond basic execution. You can also select Create a custom role. When you choose this option, a window appears where you can edit the permissions policy inline. \n[e]In the Advanced settings section, leave the default Lambda function configuration values.\n The memory and timeout values are sufficient for the Lambda function you are creating. These configurations influence the performance of your code. For more information, see Lambda Functions. \n [f]Choose Next. \n [g]Choose Create Function to create a Lambda function. \n The console saves the code into a file and then zips the file, which is the deployment package. The console then uploads the deployment package to AWS Lambda creating your Lambda function. The console shows the hello-world-python Lambda function, you can now perform various action including test the function" ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R81", "name": "Invoke the Lambda Function Manually and Verify Results, Logs, and Metrics", "description": " Invoke the Lambda Function Manually and Verify Results, Logs, and Metrics", "version": "1.1", "createdDate": "2017-07-18T20:50:00.682+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:50:00.682+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "AWS Lambda", "tools": [ "AWS CLI" ], "action": "Invoke", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R81_1", "name": "Invoke the Lambda Function Manually and Verify Results, Logs, and Metrics (AWS Lambda)", "type": "TASKS", "status": null, "tasks": [ "On the Lambda > Functions > HelloWorld page, choose Test.", "In the Input test event page, choose Hello World from the Sample event template list. The following sample event template appears in the window. \n {\"key3\": \"value3\",\"key2\": \"value2\",\"key1\": \"value1\"} \n You can change key and values in the sample JSON, but don't change the event structure. If you do change any keys and values, you must update the sample code accordingly. Choose Save and test.", "AWS Lambda executes your function on your behalf. The handler in your Lambda function receives and then processes the sample event.", "Upon successful execution, view results in the console. \n Note the following:\n \t The Execution result section shows the execution status as succeeded and also shows the function execution results, returned by the return statement.\n \t Note:The console always uses the RequestResponse invocation type (synchronous invocation) when invoking a Lambda function which causes AWS Lambda to return a response immediately. For more information, see Invocation Types.\n The Summary section shows the key information reported in the Log output section (the REPORT line in the execution log).\n The Log output section shows the log AWS Lambda generates for each execution. These are the logs written to CloudWatch by the Lambda function. The AWS Lambda console shows these logs for your convenience. \n Note that the Click here link shows logs in the CloudWatch console. The function then adds logs to Amazon CloudWatch in the log group that corresponds to the Lambda function.", "Run the Lambda function a few times to gather some metrics that you can view in the next step.", "Choose the Monitoring tab to view the CloudWatch metrics for your Lambda function. This page shows four CloudWatch metrics.", "Note the following:\n The X-axis shows the past 24 hours from the current time (for example, 2:00 pm as shown in the screen shot).\n Invocation count shows the number of invocations during this interval.\n Invocation duration shows how long it took for your Lambda function to run. It shows minimum, maximum, and average time of execution.\n Invocation errors show the number of times your Lambda function failed. You can compare the number of times your function executed and how many times it failed (if any).\n Throttled invocation metrics show whether AWS Lambda throttled your Lambda function invocation. For more information, see List of AWS Lambda Limits.\n The AWS Lambda console shows these CloudWatch metrics for your convenience. You can see these metrics in the Amazon CloudWatch console by clicking any of these metrics." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R82", "name": "(Optional) Create a Lambda Function Authored in Java", "description": "Create a Lambda Function Authored in Java", "version": "1.1", "createdDate": "2017-07-18T20:50:00.905+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:50:00.905+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "AWS Lambda", "tools": [ "AWS CLI" ], "action": "Create", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R82_1", "name": "Create a Lambda Function Authored in Java (AWS Lambda)", "type": "TASKS", "status": null, "tasks": [ "The blueprints provide sample code authored either in Python or Node.js. You can easily modify the example using the inline editor in the console. However, if you want to author code for your Lambda function in Java, there are no blueprints provided. Also, there is no inline editor for you to write Java code in the AWS Lambda console.\n That means, you must write your Java code and also create your deployment package outside the console. After you create the deployment package, you can use the console to upload the package to AWS Lambda to create your Lambda function. You can also use the console to test the function by manually invoking it.\n In this section you create a Lambda function using the following Java code example.\n\n \n package example;\n import com.amazonaws.services.lambda.runtime.Context; \n import com.amazonaws.services.lambda.runtime.LambdaLogger;\n public class Hello {\n    public String myHandler(int myCount, Context context) {\n        LambdaLogger logger = context.getLogger();\n        logger.log(\"received : \" + myCount);\n        return String.valueOf(myCount);\n    }\n } \n\n First, you need to package this code and any dependencies into a deployment package. Then, you can use the Getting Started exercise to upload the package to create your Lambda function and test using the console." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R83", "name": "Create a Simple Microservice using Lambda and API Gateway", "description": "In this exercise you will use the Lambda console to create a Lambda function (MyLambdaMicroservice), and an Amazon API Gateway endpoint to trigger that function. You will be able to call the endpoint with any method (GET, POST, PATCH, etc.) to trigger your Lambda function. When the endpoint is called, the entire request will be passed through to your Lambda function. Your function action will depend on the method you call your endpoint with:\n DELETE: delete an item from a DynamoDB table\n GET: scan table and return all items\n POST: Create an item\n PUT: Update an item", "version": "1.1", "createdDate": "2017-07-18T20:50:01.140+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:50:01.140+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "AWS Lambda", "tools": [ "AWS CLI" ], "action": "Create", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R83_1", "name": "Create an API Using Amazon API Gateway (AWS Lambda)", "type": "RUNBOOK", "status": null, "tasks": [ "Create an API Using Amazon API Gateway (AWS Lambda) : \n Sign in to the AWS Management Console and open the AWS Lambda console. \nChoose Create Lambda function. \nOn the Select blueprint page, choose the microservice-http-endpoint blueprint. You can use the Filter to find it. \nThe Configure triggers page will be populated with an API Gateway trigger. The default API name that will be created is LambdaMicroservice (You can change this name via the API Name field if you wish). \n Note: When you complete the wizard and create your function, Lambda automatically creates a proxy resource named MyLambdaMicroservice (your function name) under the API name you selected. For more information about proxy resources, see Configure Proxy Integration for a Proxy Resource. A proxy resource has an AWS_PROXY integration type and a catch-all method ANY. The AWS_PROXY integration type applies a default mapping template to pass through the entire request to the Lambda function and transforms the output from the Lambda function to HTTP responses. The ANY method defines the same integration setup for all the supported methods, including GET, POST, PATCH, DELETE and others.\n After reviewing your trigger, choose Next. \nOn the Configure function page, do the following: \n[a]Review the preconfigured Lambda function configuration information, including:\n\tRuntime is Node.js 6.10\n\tCode authored in JavaScript is provided. The code performs DynamoDB operations based on the method called and payload provided.\n\tHandler shows index.handler. The format is: filename.handler-function\n[b]Enter the function name MyLambdaMicroservice in Name.\n[c]In Role, enter a role name for the new role that will be created.\n Note: The microservice-http-endpoint blueprint pre-populates the Simple Microservice permission policy template in the Policy templates field, to be added to your new role upon creation. This automatically adds the requisite permissions attached to that policy to your new role. For more information, see Policy Templates. \nChoose Create function." ], "commands": [], "runbook_refs": [ "R84" ] }, { "id": "R83_2", "name": "Test Sending an HTTPS Request (AWS Lambda)", "type": "RUNBOOK", "status": null, "tasks": [ "Create an API Using Amazon API Gateway (AWS Lambda) : \n With your MyLambdaMicroService function still open in the console, choose the Actions tab and then choose Configure test event. \nReplace the existing text with the following:\n{\n\"httpMethod\":\"GET\",\n\"queryStringParameters\":{\n\"TableName\":\"MyTable\"\n}\n}" ], "commands": [], "runbook_refs": [ "R85" ] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R84", "name": "Create an API Using Amazon API Gateway", "description": "In this exercise you will use the Lambda console to create a Lambda function (MyLambdaMicroservice), and an Amazon API Gateway endpoint to trigger that function. You will be able to call the endpoint with any method (GET, POST, PATCH, etc.) to trigger your Lambda function. When the endpoint is called, the entire request will be passed through to your Lambda function. Your function action will depend on the method you call your endpoint with:\n DELETE: delete an item from a DynamoDB table\n GET: scan table and return all items\n POST: Create an item\n PUT: Update an item", "version": "1.1", "createdDate": "2017-07-18T20:50:01.367+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:50:01.367+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "AWS Lambda", "tools": [ "AWS CLI" ], "action": "Create", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R84_1", "name": "Create an API Using Amazon API Gateway (AWS Lambda)", "type": "TASKS", "status": null, "tasks": [ "Sign in to the AWS Management Console and open the AWS Lambda console.", "Choose Create Lambda function.", "On the Select blueprint page, choose the microservice-http-endpoint blueprint. You can use the Filter to find it.", "The Configure triggers page will be populated with an API Gateway trigger. The default API name that will be created is LambdaMicroservice (You can change this name via the API Name field if you wish). \n Note: When you complete the wizard and create your function, Lambda automatically creates a proxy resource named MyLambdaMicroservice (your function name) under the API name you selected. For more information about proxy resources, see Configure Proxy Integration for a Proxy Resource. A proxy resource has an AWS_PROXY integration type and a catch-all method ANY. The AWS_PROXY integration type applies a default mapping template to pass through the entire request to the Lambda function and transforms the output from the Lambda function to HTTP responses. The ANY method defines the same integration setup for all the supported methods, including GET, POST, PATCH, DELETE and others.\n After reviewing your trigger, choose Next.", "On the Configure function page, do the following: \n[a]Review the preconfigured Lambda function configuration information, including:\n\tRuntime is Node.js 6.10\n\tCode authored in JavaScript is provided. The code performs DynamoDB operations based on the method called and payload provided.\n\tHandler shows index.handler. The format is: filename.handler-function\n[b]Enter the function name MyLambdaMicroservice in Name.\n[c]In Role, enter a role name for the new role that will be created.\n Note: The microservice-http-endpoint blueprint pre-populates the Simple Microservice permission policy template in the Policy templates field, to be added to your new role upon creation. This automatically adds the requisite permissions attached to that policy to your new role. For more information, see Policy Templates.", "Choose Create function." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R85", "name": "Test Sending an HTTPS Request", "description": "In this step, you will use the console to test the Lambda function. In addition, you can run a curl command to test the end-to-end experience. That is, send an HTTPS request to your API method and have Amazon API Gateway invoke your Lambda function. In order to complete the steps, make sure you have created a DynamoDB table and named it \"MyTable\"", "version": "1.1", "createdDate": "2017-07-18T20:50:01.604+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:50:01.604+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "AWS Lambda", "tools": [ "AWS CLI" ], "action": "Test", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R85_1", "name": "Create an API Using Amazon API Gateway (AWS Lambda)", "type": "TASKS", "status": null, "tasks": [ "With your MyLambdaMicroService function still open in the console, choose the Actions tab and then choose Configure test event.", "Replace the existing text with the following:\n{\n\"httpMethod\":\"GET\",\n\"queryStringParameters\":{\n\"TableName\":\"MyTable\"\n}\n}" ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R86", "name": "(Optional) Try Other Blueprints", "description": "(Optional) Try Other Blueprints", "version": "1.1", "createdDate": "2017-07-18T20:50:01.839+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:50:01.839+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "AWS Lambda", "tools": [ "AWS CLI" ], "action": "Walkthrough", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R86_1", "name": "(Optional) Try Other Blueprints (AWS Lambda)", "type": "TASKS", "status": null, "tasks": [ "With your MyLambdaMicroService function still open in the console, choose the Actions tab and then choose Configure test event.", "Replace the existing text with the following:\n{\n\"httpMethod\":\"GET\",\n\"queryStringParameters\":{\n\"TableName\":\"MyTable\"\n}\n}" ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R87", "name": "Creating an AWS Account", "description": "To access any web service AWS offers, you must first create an AWS account at http://aws.amazon.com. An AWS account is simply an Amazon.com account that is enabled to use AWS products; you can use an existing Amazon.com account login and password when creating the AWS account. \n From your AWS account you can view your AWS account activity, view usage reports, and manage your AWS Security Credentials.", "version": "1.1", "createdDate": "2017-07-18T20:50:02.068+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:50:02.068+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "AWS", "tools": [], "action": "create", "tags": [], "type": "TUTORIAL", "steps": [ { "id": "R87_1", "name": "set up a new account (AWS)", "type": "RUNBOOK", "status": null, "tasks": [ "Open https://aws.amazon.com/, and then choose Create an AWS Account.", "Follow the online instructions. Part of the sign-up procedure involves receiving a phone call and entering a PIN using the phone keypad." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R88", "name": "Troubleshooting If An Instance Immediately Terminates", "description": "", "version": "1.1", "createdDate": "2017-07-18T20:50:02.299+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:50:02.299+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "EC2", "tools": [ "EC2 console" ], "action": "Troubleshooting", "tags": [], "type": "RESOLVE", "steps": [ { "id": "R88_1", "name": "To get the reason that an instance terminated using the console", "type": "TASKS", "status": null, "tasks": [ "Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.", "In the navigation pane, choose Instances, and select your instance.", "In the Description tab, locate the reason next to the label State transition reason. If the instance is still running, there's typically no reason listed. If you've explicitly stopped or terminated the instance, the reason is User initiated shutdown.", "After you launch an instance, we recommend that you check its status to confirm that it goes from the pending state to the running state, not the terminated state.", "The following are a few reasons why an instance might immediately terminate: \n [1] You've reached your EBS volume limit. For information about the volume limit, and to submit a request to increase your volume limit, see Request to Increase the Amazon EBS Volume Limit. \n [2] An EBS snapshot is corrupt. \n [3] The instance store-backed AMI you used to launch the instance is missing a required part (an image.part.xx file)." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R89", "name": "Troubleshooting Error connecting to your instance: Connection timed out", "description": "If you try to connect to your instance and get an error message Network error: Connection timed out or Error connecting to [instance], reason: -> Connection timed out: connect, try this.", "version": "1.1", "createdDate": "2017-07-18T20:50:02.535+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:50:02.535+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "EC2", "tools": [ "EC2 console" ], "action": "Troubleshooting", "tags": [], "type": "RESOLVE", "steps": [ { "id": "R89_1", "name": "Error connecting to your instance: Connection timed out", "type": "TASKS", "status": null, "tasks": [ "Check your security group rules. You need a security group rule that allows inbound traffic from your public IPv4 address on the proper port. \n [1] Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/. \n [2] In the navigation pane, choose Instances, and then select your instance. \n [3] In the Description tab, next to Security groups, choose view rules to display the list of rules that are in effect. \n [4] For Linux instances: Verify that there is a rule that allows traffic from your computer to port 22 (SSH). \n [5] For Windows instances: Verify that there is a rule that allows traffic from your computer to port 3389 (RDP). \n [6] If your security group has a rule that allows inbound traffic from a single IP address, this address may not be static if your computer is on a corporate network or if you are connecting through an Internet service provider (ISP). Instead, specify the range of IP addresses used by client computers. If your security group does not have a rule that allows inbound traffic as described in the previous step, add a rule to your security group. For more information, see Authorizing Network Access to Your Instances.", "[EC2-VPC] Check the network access control list (ACL) for the subnet. The network ACLs must allow inbound and outbound traffic from your local IP address on the proper port. The default network ACL allows all inbound and outbound traffic. \n [1] Open the Amazon VPC console at https://console.aws.amazon.com/vpc/. \n [2] In the navigation pane, choose Your VPCs. \n [3] On the Summary tab, find Network ACL, choose the ID (acl-xxxxxxxx), and select the ACL. \n [4] On the Inbound Rules tab, verify that the rules allow traffic from your computer. Otherwise, delete or modify the rule that is blocking traffic from your computer. \n [5] On the Outbound Rules tab, verify that the rules allow traffic to your computer. Otherwise, delete or modify the rule that is blocking traffic to your computer.", "If your computer is on a corporate network, ask your network administrator whether the internal firewall allows inbound and outbound traffic from your computer on port 22 (for Linux instances) or port 3389 (for Windows instances). \n If you have a firewall on your computer, verify that it allows inbound and outbound traffic from your computer on port 22 (for Linux instances) or port 3389 (for Windows instances).", "Check that your instance has a public IPv4 address. If not, you can associate an Elastic IP address with your instance. For more information, see Elastic IP Addresses.", "Check the CPU load on your instance; the server may be overloaded. AWS automatically provides data such as Amazon CloudWatch metrics and instance status, which you can use to see how much CPU load is on your instance and, if necessary, adjust how your loads are handled. For more information, see Monitoring Your Instances Using CloudWatch. \n [1]If your load is variable, you can automatically scale your instances up or down using Auto Scaling and Elastic Load Balancing. \n [2]If your load is steadily growing, you can move to a larger instance type. For more information, see Resizing Your Instance.", "To connect to your instance using an IPv6 address, check the following: \n [1]Your subnet must be associated with a route table that has a route for IPv6 traffic (::/0) to an Internet gateway. \n [2]Your security group rules must allow inbound traffic from your local IPv6 address on the proper port (22 for Linux and 3389 for Windows). \n [3]Your network ACL rules must allow inbound and outbound IPv6 traffic. \n [4]If you launched your instance from an older AMI, it may not be configured for DHCPv6 (IPv6 addresses are not automatically recognized on the network interface). For more information, see Configure IPv6 on Your Instances in the Amazon VPC User Guide. \n [5]Your local computer must have an IPv6 address, and must be configured to use IPv6." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R90", "name": "Troubleshooting Stopping Your Instance", "description": "", "version": "1.1", "createdDate": "2017-07-18T20:50:02.763+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:50:02.763+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "EC2", "tools": [ "EC2 console" ], "action": "Troubleshooting", "tags": [], "type": "RESOLVE", "steps": [ { "id": "R90_1", "name": "Troubleshooting Stopping Your Instance", "type": "TASKS", "status": null, "tasks": [ "If you have stopped your Amazon EBS-backed instance and it appears \"stuck\" in the stopping state, there may be an issue with the underlying host computer. \n First, try stopping the instance again. If you are using the stop-instances (AWS CLI) command be sure to use the --force option. \n If you can't force the instance to stop, you can create an AMI from the instance and launch a replacement instance." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R91", "name": "Troubleshooting Terminating Your Instance: Delayed Instance Termination", "description": "", "version": "1.1", "createdDate": "2017-07-18T20:50:02.997+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:50:02.997+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "EC2", "tools": [ "EC2 console" ], "action": "Troubleshooting", "tags": [], "type": "RESOLVE", "steps": [ { "id": "R91_1", "name": "Delayed Instance Termination", "type": "TASKS", "status": null, "tasks": [ "If your instance remains in the shutting-down state longer than a few minutes, it might be delayed due to shutdown scripts being run by the instance. \n Another possible cause is a problem with the underlying host computer. If your instance remains in the shutting-down state for several hours, Amazon EC2 treats it as a stuck instance and forcibly terminates it. \n If it appears that your instance is stuck terminating and it has been longer than several hours, post a request for help to the Amazon EC2 forum. To help expedite a resolution, include the instance ID and describe the steps that you've already taken." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R92", "name": "Troubleshooting Terminating Your Instance: Automatically Launch or Terminate Instances", "description": "", "version": "1.1", "createdDate": "2017-07-18T20:50:03.233+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:50:03.233+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "EC2", "tools": [ "EC2 console" ], "action": "Troubleshooting", "tags": [], "type": "RESOLVE", "steps": [ { "id": "R92_1", "name": "Automatically Launch or Terminate Instances", "type": "TASKS", "status": null, "tasks": [ "If you terminate all your instances, you may see that we launch a new instance for you. If you launch an instance, you may see that we terminate one of your instances. If you stop an instance, you may see that we terminate the instance and launch a new instance. Generally, these behaviors mean that you've used Auto Scaling or Elastic Beanstalk to scale your computing resources automatically based on criteria that you've defined." ], "commands": [], "runbook_refs": [] } ] }
{"index":{"_index":"aws-chatbot-runbook","_type":"runbook"}}
{ "documentId": null, "id": "R93", "name": "Troubleshooting Terminating  Your Instance: Terminated Instance Still Displayed", "description": "", "version": "1.1", "createdDate": "2017-07-18T20:50:03.464+0530", "createdBy": "Rajat Paliwal", "modifiedDate": "2017-07-18T20:50:03.464+0530", "modifiedBy": "Rajat Paliwal", "status": "ACTIVE", "prerequisites": [], "product": "EC2", "tools": [ "EC2 console" ], "action": "Troubleshooting", "tags": [], "type": "RESOLVE", "steps": [ { "id": "R93_1", "name": "Terminated Instance Still Displayed", "type": "TASKS", "status": null, "tasks": [ "After you terminate an instance, it remains visible for a short while before being deleted. The status shows as terminated. If the entry is not deleted after several hours, contact Support." ], "commands": [], "runbook_refs": [] } ] } 
